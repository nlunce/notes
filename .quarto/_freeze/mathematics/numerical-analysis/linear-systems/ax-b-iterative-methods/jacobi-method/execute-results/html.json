{
  "hash": "0b183dc6c4432a9bd849657804b8bd32",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: 'The Jacobi Method for Solving Linear Systems'\nauthor: 'Nathan Lunceford'\nformat:\n  html:\n    self-contained: true\n    page-layout: full\n    toc: true\n    toc-depth: 3\n    toc-location: right\n    number-sections: false\n    html-math-method: katex\n    embed-resources: true\n    code-fold: true\n    code-summary: 'Show Code'\n    code-overflow: wrap\n    code-copy: hover\n    code-tools:\n      source: false\n      toggle: true\n      caption: See code\nengine: jupyter\npreview:\n  port: 3000\n  browser: true\n  watch-inputs: true\n  navigate: true\n---\n\n\n## **Overview**\n\nThe **Jacobi Method** is a type of [**fixed-point iteration**](../../w01/fixed-point-iteration.html) specifically designed for solving [**systems of linear equations**](../../w06/linear-systems.html). The approach involves rewriting each equation to solve for one variable at a time and iterating over these equations to approximate the solution.\n\nFor a system of equations $A\\mathbf{x} = \\mathbf{b}$, the Jacobi Method works by isolating the $i$-th variable in the $i$-th equation, updating its value based on the other variables' values from the previous iteration.\n\n## **The Jacobi Method**\n\nConsider the system of equations:\n\n$$\nA\\mathbf{x} = \\mathbf{b}\n$$\n\nLet $A$ be decomposed into three parts:\n\n- $D$: The diagonal components of $A$.\n- $L$: The strictly lower triangular components of $A$.\n- $U$: The strictly upper triangular components of $A$.\n\nThus,\n\n$$\nA = D + L + U\n$$\n\nRewriting $A\\mathbf{x} = \\mathbf{b}$, we have:\n\n$$\nD\\mathbf{x} = \\mathbf{b} - (L + U)\\mathbf{x}\n$$\n\nSolving for $\\mathbf{x}$:\n\n$$\n\\mathbf{x} = D^{-1} \\left( \\mathbf{b} - (L + U)\\mathbf{x} \\right)\n$$\n\nThe Jacobi Method then iteratively updates the values of $\\mathbf{x}$ as:\n\n$$\n\\mathbf{x}_{k+1} = D^{-1} \\left( \\mathbf{b} - (L + U)\\mathbf{x}_{k} \\right)\n$$\n\nwhere $k$ denotes the iteration step.\n\n## **Example**\n\n### **System of Equations**\n\nConsider the system:\n\n$$\n3u + v = 5, \\quad u + 2v = 5\n$$\n\n### **Step 1: Rearrange Equations**\n\nRewrite each equation to isolate the variables:\n\n$$\nu = \\frac{5 - v}{3}, \\quad v = \\frac{5 - u}{2}\n$$\n\n### **Step 2: Iterative Updates**\n\nStart with an initial guess $\\mathbf{x}^{(0)} = \\begin{bmatrix} u_0 \\\\ v_0 \\end{bmatrix} = \\begin{bmatrix} 0 \\\\ 0 \\end{bmatrix}$. The iterations proceed as follows:\n\n1. **Iteration 1 ($k = 1$):**\n\n   $$\n   u_1 = \\frac{5 - v_0}{3} = \\frac{5 - 0}{3} = \\frac{5}{3}, \\quad v_1 = \\frac{5 - u_0}{2} = \\frac{5 - 0}{2} = \\frac{5}{2}\n   $$\n\n   Thus, $\\mathbf{x}^{(1)} = \\begin{bmatrix} \\frac{5}{3} \\\\ \\frac{5}{2} \\end{bmatrix}$.\n\n2. **Iteration 2 ($k = 2$):**\n\n   $$\n   u_2 = \\frac{5 - v_1}{3} = \\frac{5 - \\frac{5}{2}}{3} = \\frac{5}{6}, \\quad v_2 = \\frac{5 - u_1}{2} = \\frac{5 - \\frac{5}{3}}{2} = \\frac{5}{3}\n   $$\n\n   Thus, $\\mathbf{x}^{(2)} = \\begin{bmatrix} \\frac{5}{6} \\\\ \\frac{5}{3} \\end{bmatrix}$.\n\n3. **Iteration 3 ($k = 3$):**\n\n   $$\n   u_3 = \\frac{5 - v_2}{3} = \\frac{5 - \\frac{5}{3}}{3} = \\frac{10}{9}, \\quad v_3 = \\frac{5 - u_2}{2} = \\frac{5 - \\frac{5}{6}}{2} = \\frac{25}{12}\n   $$\n\n   Thus, $\\mathbf{x}^{(3)} = \\begin{bmatrix} \\frac{10}{9} \\\\ \\frac{25}{12} \\end{bmatrix}$.\n\n### **Convergence**\n\nThe iterative updates show convergence to the solution $\\mathbf{x} = \\begin{bmatrix} 1 \\\\ 2 \\end{bmatrix}$.\n\n## **Convergence Conditions**\n\nThe Jacobi Method converges if the matrix $A$ is **strictly diagonally dominant**, meaning:\n\n$$\n|a_{ii}| > \\sum_{j \\neq i} |a_{ij}|\n$$\n\nfor all rows $i$. Alternatively, if $A$ is **symmetric positive definite**, the Jacobi Method is also guaranteed to converge.\n\n## **Limitations**\n\nIn cases where $A$ is not strictly diagonally dominant or symmetric positive definite, the Jacobi Method may fail to converge.\n\n### **Example of Divergence**\n\nConsider the system:\n\n$$\nu + 2v = 5, \\quad 3u + v = 5\n$$\n\nRewriting:\n\n$$\nu = 5 - 2v, \\quad v = 5 - 3u\n$$\n\nStarting with $\\mathbf{x}^{(0)} = \\begin{bmatrix} 0 \\\\ 0 \\end{bmatrix}$, the iterations diverge:\n\n1. **Iteration 1 ($k = 1$):**\n\n   $$\n   u_1 = 5 - 2v_0 = 5, \\quad v_1 = 5 - 3u_0 = 5\n   $$\n\n   $\\mathbf{x}^{(1)} = \\begin{bmatrix} 5 \\\\ 5 \\end{bmatrix}$.\n\n2. **Iteration 2 ($k = 2$):**\n   $$\n   u_2 = 5 - 2v_1 = -5, \\quad v_2 = 5 - 3u_1 = -10\n   $$\n   $\\mathbf{x}^{(2)} = \\begin{bmatrix} -5 \\\\ -10 \\end{bmatrix}$\n\nThe divergence occurs because the matrix is not strictly diagonally dominant.\n\n## **Summary**\n\nThe Jacobi Method is a simple and effective iterative technique for solving linear systems, particularly when the system matrix is strictly diagonally dominant or symmetric positive definite. However, it is sensitive to the properties of the matrix $A$ and may not converge for all systems.\n\n",
    "supporting": [
      "jacobi-method_files"
    ],
    "filters": [],
    "includes": {}
  }
}