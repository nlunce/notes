{
  "hash": "0aa643007094d9834829e454600edfe8",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: 'LU Factorization'\nauthor: 'Nathan Lunceford'\nformat:\n  html:\n    self-contained: true\n    page-layout: full\n    toc: true\n    toc-depth: 3\n    toc-location: right\n    number-sections: false\n    html-math-method: katex\n    embed-resources: true\n    code-fold: true\n    code-summary: 'Show Code'\n    code-overflow: wrap\n    code-copy: hover\n    code-tools:\n      source: false\n      toggle: true\n      caption: See code\nengine: jupyter\npreview:\n  port: 3000\n  browser: true\n  watch-inputs: true\n  navigate: true\n---\n\n\n## **Overview**\n\nLU Factorization (or LU Decomposition) is a powerful technique in linear algebra for breaking down a matrix $A$ into the product of a lower triangular matrix $L$ and an upper triangular matrix $U$. This factorization is commonly used for solving linear systems, computing determinants, and inverting matrices.\n\n## **Definition and Decomposition**\n\nFor a square matrix $A$, LU Factorization is given by:\n\n$$\nA = LU\n$$\n\nwhere:\n\n- $L$ is a lower triangular matrix with ones on the diagonal.\n- $U$ is an upper triangular matrix.\n\nIf $A$ cannot be decomposed directly, **partial pivoting** may be applied, resulting in:\n\n$$\nPA = LU\n$$\n\nwhere $P$ is a permutation matrix that records row exchanges.\n\n## **Why You Subtract Rows**\n\nWhen performing row operations to compute $LU$, the operation for row elimination is explicitly written as:\n\n$$\nR_j \\to R_j - L_{ij} R_i\n$$\n\nwhere:\n\n- $R_i$ is the pivot row.\n- $R_j$ is the row being updated.\n- $L_{ij} = \\frac{a_{ji}}{a_{ii}}$ is the multiplier used to eliminate the element $a_{ji}$.\n\n### **Importance of Subtraction:**\n\n- **Correct Multiplier Signs:** Subtracting ensures that the multiplier $L_{ij}$ is stored with its correct sign in the $L$-matrix.\n- **Consistency in Computation:** Adding the negative version (i.e., $R_j \\to R_j + (-L_{ij} R_i)$) can lead to confusion and sign errors in $L_{ij}$, even though it seems conceptually similar.\n- **Preventing Errors:** Adding instead of subtracting might inadvertently reverse the signs of the entries in $L$, causing errors in the final decomposition.\n\n### **Example of a Sign Error:**\n\nSuppose we start with the matrix:\n\n$$\nA = \\begin{bmatrix}\n4 & 8 & -4 \\\\\n-1 & 1 & -2 \\\\\n2 & 3 & 1\n\\end{bmatrix}\n$$\n\n1. **Correct Subtraction:**\n\n   Compute $L_{21} = \\frac{-1}{4}$, and perform $R_2 \\to R_2 - L_{21} R_1$:\n\n   $$\n   L_{21} = \\frac{-1}{4}, \\quad R_2 \\to R_2 - L_{21} R_1\n   $$\n\n   Result:\n\n   $$\n   \\begin{bmatrix}\n   4 & 8 & -4 \\\\\n   0 & 3 & -3 \\\\\n   2 & 3 & 1\n   \\end{bmatrix}\n   $$\n\n   The multiplier $L_{21} = \\frac{-1}{4}$ is correctly stored.\n\n2. **Adding the Negative Version:**\n\n   If we compute $R_2 \\to R_2 + (-L_{21} R_1)$, we might misinterpret $-L_{21} = \\frac{1}{4}$ as $+\\frac{1}{4}$:\n\n   $$\n   L_{21} = \\frac{1}{4}, \\quad R_2 \\to R_2 + (-L_{21} R_1)\n   $$\n\n   Result:\n\n   $$\n   \\begin{bmatrix}\n   4 & 8 & -4 \\\\\n   0 & -3 & +3 \\\\\n   2 & 3 & 1\n   \\end{bmatrix}\n   $$\n\n   Here, $L_{21}$ would have the wrong sign in the $L$-matrix, leading to incorrect results.\n\n## **Conditions for LU Factorization**\n\nLU Factorization is valid when:\n\n1. **Matrix is Square**: $A$ must be a square matrix.\n2. **Non-Singular Leading Submatrices**: Each leading principal submatrix (upper-left submatrix) of $A$ must be non-singular.\n\nWhen these conditions are not met, row pivoting enables decomposition.\n\n## **Factorization Process**\n\nTo factorize $A$ into $L$ and $U$:\n\n1. **Eliminate Elements**: Perform row operations to create zeros below the main diagonal of $U$.\n2. **Store Multipliers**: Record the multipliers in $L$.\n\n### **Example**\n\nGiven a $3 \\times 3$ matrix:\n\n$$\nA = \\begin{pmatrix} 2 & 3 & 1 \\\\ 4 & 7 & -1 \\\\ -2 & 3 & 5 \\end{pmatrix}\n$$\n\n1. Transform $A$ into $U$ using row operations.\n2. Record elimination factors in $L$.\n3. The result satisfies $A = LU$.\n\n## **Solving Systems with LU Factorization**\n\nLU Factorization allows us to solve $Ax = b$ by breaking it down into two simpler systems:\n\n1. **Solve $Ly = b$**: Use forward substitution, as $L$ is lower triangular.\n2. **Solve $Ux = y$**: Use back substitution with $U$ as an upper triangular matrix.\n\n## **Pivoting and Permutation**\n\nIn cases where $A$ has zeros or small values on the diagonal, **partial pivoting** improves numerical stability by reordering rows to place a larger element on the diagonal:\n\n$$\nPA = LU\n$$\n\nwhere $P$ is a permutation matrix that tracks row exchanges.\n\n## **Conclusion**\n\nLU Factorization is an essential tool in linear algebra, providing a simplified method to solve linear systems efficiently. By breaking matrices into triangular forms, it reduces computational complexity and lays the groundwork for more advanced numerical techniques. Always remember to **subtract row operations consistently** to avoid sign errors and ensure correct results.\n\n",
    "supporting": [
      "lu-factorization_files"
    ],
    "filters": [],
    "includes": {}
  }
}