{
  "hash": "0f0ffecff8ae88656dd43578a8f89443",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: 'Forward Error in Linear Systems'\nauthor: 'Nathan Lunceford'\nformat:\n  html:\n    self-contained: true\n    page-layout: full\n    toc: true\n    toc-depth: 3\n    toc-location: right\n    number-sections: false\n    html-math-method: katex\n    embed-resources: true\n    code-fold: true\n    code-summary: 'Show Code'\n    code-overflow: wrap\n    code-copy: hover\n    code-tools:\n      source: false\n      toggle: true\n      caption: See code\nengine: jupyter\npreview:\n  port: 3000\n  browser: true\n  watch-inputs: true\n  navigate: true\n---\n\n\n## **Overview**\n\nThe **forward error** is a critical concept in numerical linear algebra, measuring the difference between the approximate solution $\\mathbf{x_a}$ and the true solution $\\mathbf{x}$ of a linear system $A\\mathbf{x} = \\mathbf{b}$. It quantifies how far the computed solution is from the exact solution, providing insight into the accuracy of numerical methods.\n\nThe forward error is defined as:\n\n$$\n\\text{FE} = \\|\\mathbf{x} - \\mathbf{x_a}\\|_\\infty\n$$\n\nwhere:\n\n- $\\mathbf{x}$: The **true solution** of the system $A\\mathbf{x} = \\mathbf{b}$,\n- $\\mathbf{x_a}$: The **approximate solution**,\n- $\\|\\cdot\\|_\\infty$: The [**infinity norm**](../norms/infinity-vector-norm.html), measuring the maximum absolute entry of the vector.\n\n## **What Forward Error Represents**\n\n1. **Solution Accuracy**:\n\n   - The forward error reflects the maximum difference between the components of the true solution and the approximate solution.\n\n2. **Component-wise Deviation**:\n\n   - It indicates the largest deviation in any component of the solution vector.\n\n3. **Exact Solution**:\n\n   - If $\\mathbf{x_a}$ is the exact solution, then:\n\n     $$\n     \\text{FE} = 0\n     $$\n\n## **Why Forward Error Matters**\n\n- **Assessing Solution Quality**:\n\n  - The forward error directly measures the accuracy of the approximate solution, helping determine how close it is to the true solution.\n\n- **Error Propagation**:\n\n  - Understanding the forward error aids in analyzing how errors in computations propagate through the solution process.\n\n- **Numerical Stability**:\n\n  - A small forward error indicates that the numerical method is producing reliable results.\n\n## **Example**\n\nTo enhance the visualization, we'll adjust the approximate solution $\\mathbf{x_a}$ so that the differences in both components are whole numbers but **not equal**, providing a clearer depiction of forward error in multiple dimensions.\n\nConsider the system:\n\n$$\nA = \\begin{bmatrix} 1 & 1 \\\\ 3 & -4 \\end{bmatrix}, \\quad\n\\mathbf{b} = \\begin{bmatrix} 3 \\\\ 2 \\end{bmatrix}, \\quad\n\\mathbf{x} = \\begin{bmatrix} 2 \\\\ 1 \\end{bmatrix}, \\quad\n\\mathbf{x_a} = \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix}\n$$\n\n### **Step 1: Verify the True Solution**\n\nCheck that $\\mathbf{x}$ satisfies $A\\mathbf{x} = \\mathbf{b}$:\n\n$$\nA\\mathbf{x} = \\begin{bmatrix} 1 \\times 2 + 1 \\times 1 \\\\ 3 \\times 2 + (-4) \\times 1 \\end{bmatrix} = \\begin{bmatrix} 3 \\\\ 2 \\end{bmatrix} = \\mathbf{b}\n$$\n\n### **Step 2: Compute the Forward Error**\n\nCompute the difference between $\\mathbf{x}$ and $\\mathbf{x_a}$:\n\n$$\n\\mathbf{e} = \\mathbf{x} - \\mathbf{x_a} = \\begin{bmatrix} 2 - 1 \\\\ 1 - (-1) \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 2 \\end{bmatrix}\n$$\n\nThe forward error is the infinity norm of $\\mathbf{e}$:\n\n$$\n\\text{FE} = \\|\\mathbf{e}\\|_\\infty = \\max(|1|, |2|) = 2\n$$\n\n### **Step 3: Interpretation**\n\n- The maximum deviation between the true and approximate solutions is $2$, occurring in the second component.\n- The approximate solution $\\mathbf{x_a}$ differs from $\\mathbf{x}$ by $1$ in the $x$-component and $2$ in the $y$-component.\n\n## **Visualization of Forward Error**\n\nTo illustrate the forward error, we will visualize the true solution $\\mathbf{x}$ and the approximate solution $\\mathbf{x_a}$, along with the error vector $\\mathbf{e} = \\mathbf{x} - \\mathbf{x_a}$. By plotting these vectors, we can see how the approximate solution deviates from the true solution in both components.\n\n- **Black Vector** ($\\mathbf{x}$): The true solution vector.\n- **Gray Vector** ($\\mathbf{x_a}$): The approximate solution vector.\n- **Orange Vector** ($\\mathbf{e} = \\mathbf{x} - \\mathbf{x_a}$): The error vector.\n- **Error Components**: Projections of $\\mathbf{e}$ onto the $x$ and $y$ axes.\n\n::: {#cell-forward-error .cell execution_count=1}\n``` {.python .cell-code code-summary=\"Show Code\"}\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nx_true = np.array([2, 1])\nx_a = np.array([1, -1])\ne = x_true - x_a\n\nplt.figure(figsize=(12, 8))\norigin = np.zeros(2)\n\nplt.quiver(*origin, *x_true, color='black', angles='xy', scale_units='xy', scale=1, label=r'$\\mathbf{x}$ (True Solution)', width=0.01, zorder=5)\nplt.quiver(*origin, *x_a, color='gray', angles='xy', scale_units='xy', scale=1, label=r'$\\mathbf{x}_a$ (Approximate Solution)', width=0.01, zorder=5)\nplt.quiver(*x_a, *e, color='orange', angles='xy', scale_units='xy', scale=1, label=r'$\\mathbf{e} = \\mathbf{x} - \\mathbf{x}_a$', width=0.01, zorder=5)\nplt.quiver(*x_a, e[0], 0, color='red', angles='xy', scale_units='xy', scale=1, label=r'$\\mathbf{e_1}$', width=0.01, zorder=5)\nplt.quiver(x_a[0] + e[0], x_a[1], 0, e[1], color='purple', angles='xy', scale_units='xy', scale=1, label=r'$\\mathbf{e_2}$', width=0.01, zorder=5)\n\nplt.annotate(r'$\\mathbf{x}_a$', (x_a[0], x_a[1]), textcoords=\"offset points\", xytext=(-30, -15), ha='center', color='gray', fontsize=14, zorder=6)\nplt.annotate(r'$\\mathbf{x}$', (x_true[0], x_true[1]), textcoords=\"offset points\", xytext=(0, 10), ha='center', color='black', fontsize=14, zorder=6)\nplt.annotate(r'$\\mathbf{e}$', (x_a[0] + e[0]/2, x_a[1] + e[1]/2), textcoords=\"offset points\", xytext=(15, -15), ha='center', color='orange', fontsize=14, zorder=6)\nplt.annotate(r'$\\mathbf{e_1}$', (x_a[0] + e[0]/2, x_a[1] - 0.2), textcoords=\"offset points\", xytext=(0, -20), ha='center', color='red', fontsize=14, zorder=6)\nplt.annotate(r'$\\mathbf{e_2}$', (x_a[0] + e[0] + 0.1, x_a[1] + e[1]/2), textcoords=\"offset points\", xytext=(20, 0), ha='center', color='purple', fontsize=14, zorder=6)\n\nplt.text(x_a[0] + e[0] + 0.3, x_a[1] + e[1] + 0.3, r'$\\max(|\\mathbf{e_1}|, |\\mathbf{e_2}|) = |\\mathbf{e_2}| = 2$', color='purple', fontsize=14, zorder=6)\n\nplt.plot([x_a[0], x_true[0]], [x_a[1], x_true[1]], color='orange', linewidth=1.5, zorder=4)  # Keep the connecting line below vectors\nplt.xlim(-1, 5)\nplt.ylim(-2, 3)\nplt.axhline(0, color='black', linewidth=0.8, zorder=1)\nplt.axvline(0, color='black', linewidth=0.8, zorder=1)\nplt.grid(color='lightgray', linestyle='--', linewidth=0.7, zorder=0)\nplt.legend(loc='upper left', fontsize=12)\nplt.title('Visualization of Forward Error with Error Components', fontsize=18)\nplt.xlabel('x-axis', fontsize=14)\nplt.ylabel('y-axis', fontsize=14)\nplt.gca().set_aspect('equal', adjustable='box')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](forward-error_files/figure-html/forward-error-output-1.png){#forward-error width=786 height=683}\n:::\n:::\n\n\n### E**xplanation of the Visualization**\n\n- **Vector Addition**:\n\n  - The error vector $\\mathbf{e}$ is drawn starting from $\\mathbf{x_a}$ and pointing towards $\\mathbf{x}$, demonstrating that:\n\n    $$\n    \\mathbf{x_a} + \\mathbf{e} = \\mathbf{x}\n    $$\n\n- **Error Components**:\n\n  - The error vector $\\mathbf{e}$ is decomposed into its $x$-component $e_1$ (red dashed arrow) and $y$-component $e_2$ (purple dashed arrow).\n\n  - The components are:\n\n    $$\n    e_1 = 1, \\quad e_2 = 2\n    $$\n\n- **Infinity Norm Highlighted**:\n\n  - The maximum absolute component of the error is $|e_2| = 2$, which is the forward error $\\text{FE} = \\|\\mathbf{e}\\|_\\infty$.\n\n  - This is highlighted in the graph with a text annotation.\n\n- **Understanding the Forward Error**:\n\n  - By visualizing the error components, we see that the deviation occurs in both the $x$ and $y$ components.\n\n  - The largest error is in the $y$-component, which determines the forward error.\n\n## **Conclusion**\n\n- **Forward Error Significance**:\n\n  - The forward error provides a direct measure of the accuracy of the approximate solution $\\mathbf{x_a}$ in relation to the true solution $\\mathbf{x}$.\n\n- **Visualization Enhancements**:\n\n  - By adjusting $\\mathbf{x_a}$ to differ by whole numbers in both components, the visualization effectively demonstrates how errors in multiple dimensions contribute to the overall forward error.\n\n  - Decomposing the error vector into its components and highlighting the infinity norm offers a clearer understanding of how the forward error is calculated.\n\n- **Practical Implications**:\n\n  - In numerical computations, minimizing the forward error is crucial for obtaining accurate solutions.\n\n",
    "supporting": [
      "forward-error_files"
    ],
    "filters": [],
    "includes": {}
  }
}