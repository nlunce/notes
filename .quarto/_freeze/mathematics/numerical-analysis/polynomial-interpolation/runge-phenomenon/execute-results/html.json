{
  "hash": "59951cc537b884601bb766479341774b",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: 'Runge Phenomenon'\nauthor: 'Nathan Lunceford'\nformat:\n  html:\n    self-contained: true\n    page-layout: full\n    toc: true\n    toc-depth: 1\n    toc-location: right\n    number-sections: false\n    html-math-method: katex\n    embed-resources: true\n    code-fold: true\n    code-summary: 'Show the code'\n    code-overflow: wrap\n    code-copy: hover\n    code-tools:\n      source: false\n      toggle: true\n      caption: See code\nengine: jupyter\npreview:\n  port: 3000\n  browser: true\n  watch-inputs: true\n  navigate: true\n---\n\n\n## **Introduction**\n\nThe **Runge Phenomenon** refers to the oscillatory behavior that occurs when using high-degree polynomial interpolation on evenly spaced data points, particularly near the endpoints of an interval. The phenomenon is named after Carl Runge, who discovered this issue while studying interpolation of functions with large oscillations near the boundaries of an interval.\n\n### **The Issue with High-Degree Polynomials**\n\nWhen interpolating a smooth function using polynomials of high degree, the interpolation can become highly oscillatory near the edges of the interval, even if the function being interpolated is smooth and well-behaved. This is particularly problematic with **equally spaced points**, as the polynomial tries to fit too closely to the data points near the boundaries, leading to large errors.\n\n### **Runge's Example**\n\nThe most famous example illustrating the Runge phenomenon is based on the **Runge function**:\n\n$$\nf(x) = \\frac{1}{1 + 25x^2}\n$$\n\nRunge showed that using high-degree polynomial interpolation on this function with evenly spaced points over the interval $[-5, 5]$ leads to significant oscillations near the edges. The interpolation error grows as the degree of the polynomial increases, especially near the endpoints of the interval.\n\n### **Why Does It Happen?**\n\nThe Runge phenomenon arises because high-degree polynomials tend to oscillate more as their degree increases, especially when they are forced to pass through many points. With equally spaced points, the interpolation error is concentrated near the edges of the interval, causing large deviations from the true function in those regions.\n\nMathematically, for a function $f(x)$ interpolated at $n$ evenly spaced points using a polynomial $P_n(x)$ of degree $n-1$, the interpolation error is given by:\n\n$$\n|f(x) - P_n(x)| = \\frac{|f^{(n)}(c)|}{n!} \\prod_{i=1}^{n}(x - x_i)\n$$\n\nAs the number of interpolation points $n$ increases, the product term $\\prod_{i=1}^{n}(x - x_i)$ becomes very large near the endpoints of the interval, causing the interpolation error to increase dramatically.\n\n### **Graphical Representation**\n\nThe following figure illustrates the Runge phenomenon. For the Runge function $f(x) = \\frac{1}{1 + 25x^2}$, the polynomial interpolation for large $n$ shows excessive oscillations near the interval boundaries:\n\n::: {#0a8332a8 .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef runge_function(x):\n    return 1 / (1 + 25 * x**2)\n\nx_values = np.linspace(-5, 5, 1000)\n\nplt.figure(figsize=(8, 6))\nplt.plot(x_values, runge_function(x_values), label=\"Runge Function\", color=\"blue\")\n\nplt.title(\"Runge Phenomenon\")\nplt.xlabel(\"x\")\nplt.ylabel(\"f(x)\")\nplt.legend()\nplt.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](runge-phenomenon_files/figure-html/cell-2-output-1.png){width=663 height=523}\n:::\n:::\n\n\n### **Chebyshev Nodes as a Solution**\n\nThe **Runge phenomenon** can be mitigated by using [**Chebyshev nodes**](./chebyshev-interpolation.html) instead of equally spaced points. Chebyshev nodes distribute the points more densely near the edges of the interval, where the oscillations are most likely to occur. This results in more accurate interpolation with less oscillation near the boundaries.\n\nChebyshev nodes $x_i$ for $n$ interpolation points on the interval $[-1, 1]$ are given by:\n\n$$\nx_i = \\cos\\left(\\frac{(2i - 1)\\pi}{2n}\\right)\n$$\n\nUsing Chebyshev interpolation reduces the risk of large oscillations near the endpoints, providing a more stable approximation.\n\n### **Conclusion**\n\nThe **Runge phenomenon** highlights the dangers of using high-degree polynomials for interpolation with evenly spaced points. To avoid this issue, it is recommended to use **Chebyshev interpolation** or lower-degree polynomial interpolation in smaller intervals (piecewise interpolation).\n\n",
    "supporting": [
      "runge-phenomenon_files"
    ],
    "filters": [],
    "includes": {}
  }
}