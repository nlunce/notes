{"title":"REALITY CHECK 04 Info","markdown":{"yaml":{"title":"REALITY CHECK 04 Info","format":{"html":{"self-contained":true,"page-layout":"full","toc":true,"toc-depth":3,"toc-location":"right","number-sections":false,"html-math-method":"katex","embed-resources":true,"code-fold":true,"code-summary":"Show Code","code-overflow":"wrap","code-copy":"hover","code-tools":{"source":false,"toggle":true,"caption":"See code"}}},"engine":"jupyter","preview":{"port":3000,"browser":true,"watch-inputs":true,"navigate":true}},"headingText":"GPS, Conditioning, and Nonlinear Least Squares","containsRefs":false,"markdown":"\n\n\nThe global positioning system (GPS) consists of 24 satellites carrying atomic clocks, orbiting the earth at an altitude of 20,200 km. Four satellites in each of six planes, slanted at 55° with respect to the poles, make two revolutions per day. At any time, from any point on earth, five to eight satellites are in the direct line of sight. Each satellite has a simple mission: to transmit carefully synchronized signals from predetermined positions in space, to be picked up by GPS receivers on earth. The receivers use the information, with some mathematics (described shortly), to determine accurate (x, y, z) coordinates of the receiver.\n\nAt a given instant, the receiver collects the synchronized signal from the _i_-th satellite and determines its transmission time $t_i$, the difference between the times the signal was transmitted and received. The nominal speed of the signal is the speed of light, $c ≈ 299792.458 \\, \\text{km/sec}$. Multiplying transmission time by $c$ gives the distance of the satellite from the receiver, putting the receiver on the surface of a sphere centered at the satellite position and with radius $ct_i$. If three satellites are available, then three spheres are known, whose intersection consists of two points, as shown in **Figure 4.16**. One intersection point is the location of the receiver. The other is normally far from the earth’s surface and can be safely disregarded. In theory, the problem is reduced to computing this intersection, the common solution of three sphere equations.\n\nHowever, there is a major problem with this analysis. First, although the transmissions from the satellites are timed nearly to the nanosecond by onboard atomic clocks, the clock in the typical low-cost receiver on earth has relatively poor accuracy. If we solve the three equations with slightly inaccurate timing, the calculated position could be wrong by several kilometers. Fortunately, there is a way to fix this problem. The price to pay is one extra satellite. Define $d$ to be the difference between the synchronized time on the (now four) satellite clocks and the earth-bound receiver clock. Denote the location of satellite $i$ by $(A_i, B_i, C_i)$. Then the true intersection point $(x, y, z)$ satisfies\n\n**(4.37)**\n\n$$\nr_1(x, y, z, d) = \\sqrt{(x - A_1)^2 + (y - B_1)^2 + (z - C_1)^2} - c(t_1 - d) = 0\n$$\n\n$$\nr_2(x, y, z, d) = \\sqrt{(x - A_2)^2 + (y - B_2)^2 + (z - C_2)^2} - c(t_2 - d) = 0\n$$\n\n$$\nr_3(x, y, z, d) = \\sqrt{(x - A_3)^2 + (y - B_3)^2 + (z - C_3)^2} - c(t_3 - d) = 0\n$$\n\n$$\nr_4(x, y, z, d) = \\sqrt{(x - A_4)^2 + (y - B_4)^2 + (z - C_4)^2} - c(t_4 - d) = 0\n$$\n\nto be solved for the unknowns $x, y, z, d$. Solving the system reveals not only the receiver location, but also the correct time from the satellite clocks, due to knowing $d$. Therefore, the inaccuracy in the GPS receiver clock can be fixed by using one extra satellite.\n\nGeometrically speaking, four spheres may not have a common intersection point, but they will if the radii are expanded or contracted by the right common amount.\n\nThe system (4.37) representing the intersection of four spheres is the three-dimensional analogue of (4.35), representing the intersection point of three circles in the plane.\n\nThe system (4.37) can be seen to have two solutions $(x, y, z, d)$. The equations can be equivalently written\n\n$$\n(x - A_1)^2 + (y - B_1)^2 + (z - C_1)^2 = [c(t_1 - d)]^2\n$$\n\n$$\n(x - A_2)^2 + (y - B_2)^2 + (z - C_2)^2 = [c(t_2 - d)]^2\n$$\n\n$$\n(x - A_3)^2 + (y - B_3)^2 + (z - C_3)^2 = [c(t_3 - d)]^2\n$$\n\n$$\n(x - A_4)^2 + (y - B_4)^2 + (z - C_4)^2 = [c(t_4 - d)]^2\n$$\n\nNote that by subtracting the last three equations from the first, three **linear equations** are obtained. Each linear equation can be used to eliminate a variable $x, y, z$, and by substituting into any of the original equations, a quadratic equation in the single variable $d$ results. Therefore, system (4.37) has at most two real solutions, and they can be found by the quadratic formula.\n\nTwo further problems emerge when GPS is deployed. First is the **conditioning** of the system of equations (4.37). We will find that solving for $(x, y, z, d)$ is ill-conditioned when the satellites are bunched closely in the sky.\n\nThe second difficulty is that the transmission speed of the signals is not precisely $c$. The signals pass through 100 km of ionosphere and 10 km of troposphere, whose electromagnetic properties may affect the transmission speed. Furthermore, the signals may encounter obstacles on earth before reaching the receiver, an effect called multipath interference. To the extent that these obstacles have an equal impact on each satellite path, introducing the time correction $d$ on the right side of (4.37) helps. In general, however, this assumption is not viable and will lead us to add information from more satellites and consider applying **Gauss–Newton** to solve a least squares problem.\n\nConsider a three-dimensional coordinate system whose origin is the center of the earth (radius ≈ 6370 km). GPS receivers convert these coordinates into latitude, longitude, and elevation data for readout and more sophisticated mapping applications using global information systems (GIS), a process we will not consider here.\n\n## Instructions\n\n1. Solve the system (4.37) by using a multivariate root finder in Python. There are  \n   multiple options in scipy optimize, including root, fsolve, and newton_krylov.  \n   Find the receiver position $(x, y, z)$ near earth and time correction $d$ for known,  \n   simultaneous satellite positions\n\n$$\n(15 600, 7540, 20 140), \\quad (18 760, 2750, 18 610),\n(17 610, 14 630, 13 480), \\quad (19 170, 610, 18 390)\n$$\n\nin km, and measured time intervals $0.07074, 0.07220, 0.07690, 0.07242$ in  \nseconds, respectively. Set the initial vector to be $(x_0, y_0, z_0, d_0) = (0, 0, 6370.0, 0)$.  \nAs a check, the answers are approximately\n\n$$\n(x, y, z) = (-41.77271, -16.78919, 6370.0596)\n$$\n\nand\n\n$$\nd = -3.201566 \\times 10^{-3} \\text{ seconds}.\n$$\n\n2. Write a Python program to carry out the solution via the quadratic formula.  \n   Hint: Subtracting the last three equations of (4.37) from the first yields three  \n   linear equations in the four unknowns\n\n$$\nx u_x + y u_y + z u_z + d u_d + w = 0,\n$$\n\nexpressed in vector form. A formula for $x$ in terms of $d$ can be obtained from\n\n$$\n0 = \\text{det}[u_y | u_z | x u_x + y u_y + z u_z + d u_d + w]\n$$\n\nnoting that the determinant is linear in its columns and that a matrix with a  \nrepeated column has determinant zero. Similarly, we can arrive at formulas for $y$  \nand $z$, respectively, in terms of $d$, that can be substituted in the first quadratic  \nequation of (4.37), to make it an equation in one variable.\n\n3. Skip\n\n4. Now set up a test of the conditioning of the GPS problem\n\nDefine satellite positions $(A_i, B_i, C_i)$ from spherical coordinates $(\\rho, \\phi_i, \\theta_i)$ as:\n\n$$\nA_i = \\rho \\cos(\\phi_i) \\cos(\\theta_i)\n$$\n\n$$\nB_i = \\rho \\cos(\\phi_i) \\sin(\\theta_i)\n$$\n\n$$\nC_i = \\rho \\sin(\\phi_i)\n$$\n\nwhere $\\rho = 26 \\, 570 \\, \\text{km}$ is fixed, while $0 \\leq \\phi_i \\leq \\pi / 2$ and $0 \\leq \\theta_i \\leq 2 \\pi$ for $i = 1, \\ldots, 4$ are chosen arbitrarily. The $\\phi$ coordinate is restricted so that the four satellites are in the upper hemisphere. Set $x = 0, y = 0, z = 6370, d = 0.0001$, and calculate the corresponding satellite ranges:\n\n$$\nR_i = \\sqrt{A_i^2 + B_i^2 + (C_i - 6370)^2}\n$$\n\nand travel times:\n\n$$\nt_i = d + R_i / c\n$$\n\nWe will define an error magnification factor specially tailored to the situation. The atomic clocks aboard the satellites are correct up to about 10 nanoseconds, or $10^{-8} \\, \\text{second}$. Therefore, it is important to study the effect of changes in the transmission time of this magnitude.\n\nLet the backward, or input error, be the input change in meters. At the speed of light, $\\Delta t*i = 10^{-8} \\, \\text{second}$ corresponds to $10^{-8} s \\approx 3 \\, \\text{meters}$. Let the forward, or output error, be the change in position $\\|\\Delta x, \\Delta y, \\Delta z\\|*\\infty$, caused by such a change in $t_i$, also in meters. Then we can define the dimensionless error magnification factor (EMF):\n\n$$\n\\text{EMF} = \\frac{\\|\\Delta x, \\Delta y, \\Delta z\\|_\\infty}{c \\|\\Delta t_1, \\ldots, \\Delta t_m\\|_\\infty}\n$$\n\nand the condition number of the problem to be the maximum error magnification factor for all small $\\Delta t_i$ (say, $10^{-8}$ or less).\n\nChange each $t*i$ defined in the foregoing by $\\Delta t_i = \\pm 10^{-8}$, not all the same. Denote the new solution of the equations (4.37) by $(x, y, z, d)$ and compute the difference in position $\\|\\Delta x, \\Delta y, \\Delta z\\|*\\infty$ and the error magnification factor. Try different variations of the $\\Delta t_i$'s.\n\nWhat is the maximum position error found, in meters? Estimate the condition number of the problem, on the basis of the error magnification factors you have computed.\n","srcMarkdownNoYaml":"\n\n## GPS, Conditioning, and Nonlinear Least Squares\n\nThe global positioning system (GPS) consists of 24 satellites carrying atomic clocks, orbiting the earth at an altitude of 20,200 km. Four satellites in each of six planes, slanted at 55° with respect to the poles, make two revolutions per day. At any time, from any point on earth, five to eight satellites are in the direct line of sight. Each satellite has a simple mission: to transmit carefully synchronized signals from predetermined positions in space, to be picked up by GPS receivers on earth. The receivers use the information, with some mathematics (described shortly), to determine accurate (x, y, z) coordinates of the receiver.\n\nAt a given instant, the receiver collects the synchronized signal from the _i_-th satellite and determines its transmission time $t_i$, the difference between the times the signal was transmitted and received. The nominal speed of the signal is the speed of light, $c ≈ 299792.458 \\, \\text{km/sec}$. Multiplying transmission time by $c$ gives the distance of the satellite from the receiver, putting the receiver on the surface of a sphere centered at the satellite position and with radius $ct_i$. If three satellites are available, then three spheres are known, whose intersection consists of two points, as shown in **Figure 4.16**. One intersection point is the location of the receiver. The other is normally far from the earth’s surface and can be safely disregarded. In theory, the problem is reduced to computing this intersection, the common solution of three sphere equations.\n\nHowever, there is a major problem with this analysis. First, although the transmissions from the satellites are timed nearly to the nanosecond by onboard atomic clocks, the clock in the typical low-cost receiver on earth has relatively poor accuracy. If we solve the three equations with slightly inaccurate timing, the calculated position could be wrong by several kilometers. Fortunately, there is a way to fix this problem. The price to pay is one extra satellite. Define $d$ to be the difference between the synchronized time on the (now four) satellite clocks and the earth-bound receiver clock. Denote the location of satellite $i$ by $(A_i, B_i, C_i)$. Then the true intersection point $(x, y, z)$ satisfies\n\n**(4.37)**\n\n$$\nr_1(x, y, z, d) = \\sqrt{(x - A_1)^2 + (y - B_1)^2 + (z - C_1)^2} - c(t_1 - d) = 0\n$$\n\n$$\nr_2(x, y, z, d) = \\sqrt{(x - A_2)^2 + (y - B_2)^2 + (z - C_2)^2} - c(t_2 - d) = 0\n$$\n\n$$\nr_3(x, y, z, d) = \\sqrt{(x - A_3)^2 + (y - B_3)^2 + (z - C_3)^2} - c(t_3 - d) = 0\n$$\n\n$$\nr_4(x, y, z, d) = \\sqrt{(x - A_4)^2 + (y - B_4)^2 + (z - C_4)^2} - c(t_4 - d) = 0\n$$\n\nto be solved for the unknowns $x, y, z, d$. Solving the system reveals not only the receiver location, but also the correct time from the satellite clocks, due to knowing $d$. Therefore, the inaccuracy in the GPS receiver clock can be fixed by using one extra satellite.\n\nGeometrically speaking, four spheres may not have a common intersection point, but they will if the radii are expanded or contracted by the right common amount.\n\nThe system (4.37) representing the intersection of four spheres is the three-dimensional analogue of (4.35), representing the intersection point of three circles in the plane.\n\nThe system (4.37) can be seen to have two solutions $(x, y, z, d)$. The equations can be equivalently written\n\n$$\n(x - A_1)^2 + (y - B_1)^2 + (z - C_1)^2 = [c(t_1 - d)]^2\n$$\n\n$$\n(x - A_2)^2 + (y - B_2)^2 + (z - C_2)^2 = [c(t_2 - d)]^2\n$$\n\n$$\n(x - A_3)^2 + (y - B_3)^2 + (z - C_3)^2 = [c(t_3 - d)]^2\n$$\n\n$$\n(x - A_4)^2 + (y - B_4)^2 + (z - C_4)^2 = [c(t_4 - d)]^2\n$$\n\nNote that by subtracting the last three equations from the first, three **linear equations** are obtained. Each linear equation can be used to eliminate a variable $x, y, z$, and by substituting into any of the original equations, a quadratic equation in the single variable $d$ results. Therefore, system (4.37) has at most two real solutions, and they can be found by the quadratic formula.\n\nTwo further problems emerge when GPS is deployed. First is the **conditioning** of the system of equations (4.37). We will find that solving for $(x, y, z, d)$ is ill-conditioned when the satellites are bunched closely in the sky.\n\nThe second difficulty is that the transmission speed of the signals is not precisely $c$. The signals pass through 100 km of ionosphere and 10 km of troposphere, whose electromagnetic properties may affect the transmission speed. Furthermore, the signals may encounter obstacles on earth before reaching the receiver, an effect called multipath interference. To the extent that these obstacles have an equal impact on each satellite path, introducing the time correction $d$ on the right side of (4.37) helps. In general, however, this assumption is not viable and will lead us to add information from more satellites and consider applying **Gauss–Newton** to solve a least squares problem.\n\nConsider a three-dimensional coordinate system whose origin is the center of the earth (radius ≈ 6370 km). GPS receivers convert these coordinates into latitude, longitude, and elevation data for readout and more sophisticated mapping applications using global information systems (GIS), a process we will not consider here.\n\n## Instructions\n\n1. Solve the system (4.37) by using a multivariate root finder in Python. There are  \n   multiple options in scipy optimize, including root, fsolve, and newton_krylov.  \n   Find the receiver position $(x, y, z)$ near earth and time correction $d$ for known,  \n   simultaneous satellite positions\n\n$$\n(15 600, 7540, 20 140), \\quad (18 760, 2750, 18 610),\n(17 610, 14 630, 13 480), \\quad (19 170, 610, 18 390)\n$$\n\nin km, and measured time intervals $0.07074, 0.07220, 0.07690, 0.07242$ in  \nseconds, respectively. Set the initial vector to be $(x_0, y_0, z_0, d_0) = (0, 0, 6370.0, 0)$.  \nAs a check, the answers are approximately\n\n$$\n(x, y, z) = (-41.77271, -16.78919, 6370.0596)\n$$\n\nand\n\n$$\nd = -3.201566 \\times 10^{-3} \\text{ seconds}.\n$$\n\n2. Write a Python program to carry out the solution via the quadratic formula.  \n   Hint: Subtracting the last three equations of (4.37) from the first yields three  \n   linear equations in the four unknowns\n\n$$\nx u_x + y u_y + z u_z + d u_d + w = 0,\n$$\n\nexpressed in vector form. A formula for $x$ in terms of $d$ can be obtained from\n\n$$\n0 = \\text{det}[u_y | u_z | x u_x + y u_y + z u_z + d u_d + w]\n$$\n\nnoting that the determinant is linear in its columns and that a matrix with a  \nrepeated column has determinant zero. Similarly, we can arrive at formulas for $y$  \nand $z$, respectively, in terms of $d$, that can be substituted in the first quadratic  \nequation of (4.37), to make it an equation in one variable.\n\n3. Skip\n\n4. Now set up a test of the conditioning of the GPS problem\n\nDefine satellite positions $(A_i, B_i, C_i)$ from spherical coordinates $(\\rho, \\phi_i, \\theta_i)$ as:\n\n$$\nA_i = \\rho \\cos(\\phi_i) \\cos(\\theta_i)\n$$\n\n$$\nB_i = \\rho \\cos(\\phi_i) \\sin(\\theta_i)\n$$\n\n$$\nC_i = \\rho \\sin(\\phi_i)\n$$\n\nwhere $\\rho = 26 \\, 570 \\, \\text{km}$ is fixed, while $0 \\leq \\phi_i \\leq \\pi / 2$ and $0 \\leq \\theta_i \\leq 2 \\pi$ for $i = 1, \\ldots, 4$ are chosen arbitrarily. The $\\phi$ coordinate is restricted so that the four satellites are in the upper hemisphere. Set $x = 0, y = 0, z = 6370, d = 0.0001$, and calculate the corresponding satellite ranges:\n\n$$\nR_i = \\sqrt{A_i^2 + B_i^2 + (C_i - 6370)^2}\n$$\n\nand travel times:\n\n$$\nt_i = d + R_i / c\n$$\n\nWe will define an error magnification factor specially tailored to the situation. The atomic clocks aboard the satellites are correct up to about 10 nanoseconds, or $10^{-8} \\, \\text{second}$. Therefore, it is important to study the effect of changes in the transmission time of this magnitude.\n\nLet the backward, or input error, be the input change in meters. At the speed of light, $\\Delta t*i = 10^{-8} \\, \\text{second}$ corresponds to $10^{-8} s \\approx 3 \\, \\text{meters}$. Let the forward, or output error, be the change in position $\\|\\Delta x, \\Delta y, \\Delta z\\|*\\infty$, caused by such a change in $t_i$, also in meters. Then we can define the dimensionless error magnification factor (EMF):\n\n$$\n\\text{EMF} = \\frac{\\|\\Delta x, \\Delta y, \\Delta z\\|_\\infty}{c \\|\\Delta t_1, \\ldots, \\Delta t_m\\|_\\infty}\n$$\n\nand the condition number of the problem to be the maximum error magnification factor for all small $\\Delta t_i$ (say, $10^{-8}$ or less).\n\nChange each $t*i$ defined in the foregoing by $\\Delta t_i = \\pm 10^{-8}$, not all the same. Denote the new solution of the equations (4.37) by $(x, y, z, d)$ and compute the difference in position $\\|\\Delta x, \\Delta y, \\Delta z\\|*\\infty$ and the error magnification factor. Try different variations of the $\\Delta t_i$'s.\n\nWhat is the maximum position error found, in meters? Estimate the condition number of the problem, on the basis of the error magnification factors you have computed.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":{"source":false,"toggle":true,"caption":"See code"},"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../../styles.css"],"toc":true,"self-contained":true,"toc-depth":3,"number-sections":false,"html-math-method":"katex","embed-resources":true,"output-file":"rc04-info.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","theme":{"light":"flatly","dark":"darkly"},"title":"REALITY CHECK 04 Info","preview":{"port":3000,"browser":true,"watch-inputs":true,"navigate":true},"page-layout":"full","toc-location":"right","code-summary":"Show Code","code-copy":"hover"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}