{"title":"Bisection Method","markdown":{"yaml":{"title":"Bisection Method","author":"Nathan Lunceford","format":{"html":{"self-contained":true,"page-layout":"full","toc":true,"toc-depth":1,"toc-location":"right","number-sections":false,"html-math-method":"katex","embed-resources":true,"code-fold":true,"code-summary":"Show the code","code-overflow":"wrap","code-copy":"hover","code-tools":{"source":false,"toggle":true,"caption":"See code"}}},"engine":"jupyter","preview":{"port":3000,"browser":true,"watch-inputs":true,"navigate":true}},"headingText":"**The Bisection Method Formula**","containsRefs":false,"markdown":"\n\n**Bisection Method** is one of the simplest and most reliable numerical methods for finding a root of a continuous function $f(x) = 0$ over a closed interval $[a, b]$. The method works by repeatedly bisecting the interval and then selecting the subinterval in which the function changes sign, ensuring that a root lies within that subinterval.\n\n\nThe Bisection Method requires that the function $f(x)$ be continuous over the interval $[a, b]$, and that the function has opposite signs at the endpoints $a$ and $b$, i.e., $f(a) \\cdot f(b) < 0$. This guarantees that there is at least one root in the interval by the **Intermediate Value Theorem**.\n\nThe basic idea of the method is to repeatedly bisect the interval and check the sign of $f(x)$ at the midpoint to determine the subinterval containing the root.\n\n### **Algorithm**\n\n1. **Initial Guess**: Choose an interval $[a_0, b_0]$ such that $f(a_0) \\cdot f(b_0) < 0$.\n2. **Midpoint Calculation**: Compute the midpoint $c_k = \\frac{a_k + b_k}{2}$ of the interval $[a_k, b_k]$.\n3. **Check the Sign**: Evaluate $f(c_k)$.\n   - If $f(c_k) = 0$, then $c_k$ is the root.\n   - If $f(a_k) \\cdot f(c_k) < 0$, set $b_{k+1} = c_k$, and the root lies in $[a_k, c_k]$.\n   - If $f(c_k) \\cdot f(b_k) < 0$, set $a_{k+1} = c_k$, and the root lies in $[c_k, b_k]$.\n4. **Repeat**: Continue bisecting the interval until the length of the interval is smaller than a specified tolerance $\\epsilon$, or until $|f(c_k)| < \\epsilon$.\n\nThe approximate root will be:\n\n$$\nx^* = \\frac{a_k + b_k}{2}\n$$\n\n### **Convergence**\n\nThe Bisection Method converges **linearly**. The length of the interval halves at each iteration, ensuring that the method always converges to a solution (if one exists) within the interval.\n\nThe number of iterations $n$ required to achieve an accuracy of $\\epsilon$ can be estimated by:\n\n$$\nn \\geq \\frac{\\log \\left( \\frac{b_0 - a_0}{\\epsilon} \\right)}{\\log 2}\n$$\n\n### **Example**\n\nLet’s solve the equation $f(x) = x^3 - x - 2 = 0$ in the interval $[1, 2]$.\n\n1. **Initial Interval**:  \n   $f(1) = 1^3 - 1 - 2 = -2$  \n   $f(2) = 2^3 - 2 - 2 = 4$  \n   Since $f(1) \\cdot f(2) < 0$, there is a root in $[1, 2]$.\n\n2. **First Iteration**:  \n   Midpoint: $c_1 = \\frac{1 + 2}{2} = 1.5$  \n   $f(1.5) = 1.5^3 - 1.5 - 2 = -0.125$  \n   Since $f(1) \\cdot f(1.5) < 0$, the root lies in $[1, 1.5]$.\n\n3. **Second Iteration**:  \n   Midpoint: $c_2 = \\frac{1 + 1.5}{2} = 1.25$  \n   $f(1.25) = 1.25^3 - 1.25 - 2 = -1.796875$  \n   Since $f(1) \\cdot f(1.25) < 0$, the root lies in $[1, 1.25]$.\n\n4. **Further Iterations**:  \n   Repeat the process until the interval width is smaller than the desired tolerance $\\epsilon$.\n\n### **General Properties of the Bisection Method**\n\n1. **Guaranteed Convergence**: The method is guaranteed to converge to a root if $f(a) \\cdot f(b) < 0$ and $f(x)$ is continuous on $[a, b]$.\n\n2. **Rate of Convergence**: The Bisection Method has linear convergence, meaning the error decreases by a constant factor with each iteration. This makes the method slower than other methods like **Newton’s Method**, but much more reliable.\n\n3. **Robustness**: The method is very robust as it does not require the derivative of the function and is insensitive to the initial guesses, provided the condition $f(a) \\cdot f(b) < 0$ holds.\n\n### **Applications of the Bisection Method**\n\n- **Root Finding**: The Bisection Method is used in various fields, including physics, engineering, and mathematics, to find roots of non-linear equations.\n- **Modeling and Simulation**: It is used when precise solutions are needed and the function is known to be continuous over the interval.\n- **Initial Root Estimates**: The Bisection Method is often used to find a good initial approximation for more efficient methods like **Newton’s Method** or the **Secant Method**.\n\n### **Advantages of the Bisection Method**\n\n1. **Guaranteed Convergence**: The method always converges if the initial interval contains a root.\n2. **No Derivatives Needed**: Unlike Newton’s Method, the Bisection Method does not require the computation of derivatives.\n3. **Simplicity**: The method is easy to understand and implement.\n\n### **Limitations of the Bisection Method**\n\n1. **Slow Convergence**: The method converges linearly, which makes it slower compared to methods like Newton’s Method, which has quadratic convergence.\n2. **Only One Root**: The Bisection Method only finds one root in the interval. If multiple roots exist, it cannot find them all without running the method on different intervals.\n\n3. **Initial Interval Requirement**: The method requires an initial interval $[a, b]$ where the function changes sign, which may not always be easy to determine.\n\n### **Conclusion**\n\nThe Bisection Method is a reliable and simple method for finding roots of continuous functions, especially when no derivative information is available. While slower than other root-finding algorithms, its guaranteed convergence and robustness make it a valuable tool in numerical analysis.\n","srcMarkdownNoYaml":"\n\n**Bisection Method** is one of the simplest and most reliable numerical methods for finding a root of a continuous function $f(x) = 0$ over a closed interval $[a, b]$. The method works by repeatedly bisecting the interval and then selecting the subinterval in which the function changes sign, ensuring that a root lies within that subinterval.\n\n## **The Bisection Method Formula**\n\nThe Bisection Method requires that the function $f(x)$ be continuous over the interval $[a, b]$, and that the function has opposite signs at the endpoints $a$ and $b$, i.e., $f(a) \\cdot f(b) < 0$. This guarantees that there is at least one root in the interval by the **Intermediate Value Theorem**.\n\nThe basic idea of the method is to repeatedly bisect the interval and check the sign of $f(x)$ at the midpoint to determine the subinterval containing the root.\n\n### **Algorithm**\n\n1. **Initial Guess**: Choose an interval $[a_0, b_0]$ such that $f(a_0) \\cdot f(b_0) < 0$.\n2. **Midpoint Calculation**: Compute the midpoint $c_k = \\frac{a_k + b_k}{2}$ of the interval $[a_k, b_k]$.\n3. **Check the Sign**: Evaluate $f(c_k)$.\n   - If $f(c_k) = 0$, then $c_k$ is the root.\n   - If $f(a_k) \\cdot f(c_k) < 0$, set $b_{k+1} = c_k$, and the root lies in $[a_k, c_k]$.\n   - If $f(c_k) \\cdot f(b_k) < 0$, set $a_{k+1} = c_k$, and the root lies in $[c_k, b_k]$.\n4. **Repeat**: Continue bisecting the interval until the length of the interval is smaller than a specified tolerance $\\epsilon$, or until $|f(c_k)| < \\epsilon$.\n\nThe approximate root will be:\n\n$$\nx^* = \\frac{a_k + b_k}{2}\n$$\n\n### **Convergence**\n\nThe Bisection Method converges **linearly**. The length of the interval halves at each iteration, ensuring that the method always converges to a solution (if one exists) within the interval.\n\nThe number of iterations $n$ required to achieve an accuracy of $\\epsilon$ can be estimated by:\n\n$$\nn \\geq \\frac{\\log \\left( \\frac{b_0 - a_0}{\\epsilon} \\right)}{\\log 2}\n$$\n\n### **Example**\n\nLet’s solve the equation $f(x) = x^3 - x - 2 = 0$ in the interval $[1, 2]$.\n\n1. **Initial Interval**:  \n   $f(1) = 1^3 - 1 - 2 = -2$  \n   $f(2) = 2^3 - 2 - 2 = 4$  \n   Since $f(1) \\cdot f(2) < 0$, there is a root in $[1, 2]$.\n\n2. **First Iteration**:  \n   Midpoint: $c_1 = \\frac{1 + 2}{2} = 1.5$  \n   $f(1.5) = 1.5^3 - 1.5 - 2 = -0.125$  \n   Since $f(1) \\cdot f(1.5) < 0$, the root lies in $[1, 1.5]$.\n\n3. **Second Iteration**:  \n   Midpoint: $c_2 = \\frac{1 + 1.5}{2} = 1.25$  \n   $f(1.25) = 1.25^3 - 1.25 - 2 = -1.796875$  \n   Since $f(1) \\cdot f(1.25) < 0$, the root lies in $[1, 1.25]$.\n\n4. **Further Iterations**:  \n   Repeat the process until the interval width is smaller than the desired tolerance $\\epsilon$.\n\n### **General Properties of the Bisection Method**\n\n1. **Guaranteed Convergence**: The method is guaranteed to converge to a root if $f(a) \\cdot f(b) < 0$ and $f(x)$ is continuous on $[a, b]$.\n\n2. **Rate of Convergence**: The Bisection Method has linear convergence, meaning the error decreases by a constant factor with each iteration. This makes the method slower than other methods like **Newton’s Method**, but much more reliable.\n\n3. **Robustness**: The method is very robust as it does not require the derivative of the function and is insensitive to the initial guesses, provided the condition $f(a) \\cdot f(b) < 0$ holds.\n\n### **Applications of the Bisection Method**\n\n- **Root Finding**: The Bisection Method is used in various fields, including physics, engineering, and mathematics, to find roots of non-linear equations.\n- **Modeling and Simulation**: It is used when precise solutions are needed and the function is known to be continuous over the interval.\n- **Initial Root Estimates**: The Bisection Method is often used to find a good initial approximation for more efficient methods like **Newton’s Method** or the **Secant Method**.\n\n### **Advantages of the Bisection Method**\n\n1. **Guaranteed Convergence**: The method always converges if the initial interval contains a root.\n2. **No Derivatives Needed**: Unlike Newton’s Method, the Bisection Method does not require the computation of derivatives.\n3. **Simplicity**: The method is easy to understand and implement.\n\n### **Limitations of the Bisection Method**\n\n1. **Slow Convergence**: The method converges linearly, which makes it slower compared to methods like Newton’s Method, which has quadratic convergence.\n2. **Only One Root**: The Bisection Method only finds one root in the interval. If multiple roots exist, it cannot find them all without running the method on different intervals.\n\n3. **Initial Interval Requirement**: The method requires an initial interval $[a, b]$ where the function changes sign, which may not always be easy to determine.\n\n### **Conclusion**\n\nThe Bisection Method is a reliable and simple method for finding roots of continuous functions, especially when no derivative information is available. While slower than other root-finding algorithms, its guaranteed convergence and robustness make it a valuable tool in numerical analysis.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":{"source":false,"toggle":true,"caption":"See code"},"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"self-contained":true,"toc-depth":1,"number-sections":false,"html-math-method":"katex","embed-resources":true,"output-file":"bisection-method.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","theme":{"light":"flatly","dark":"darkly"},"title":"Bisection Method","author":"Nathan Lunceford","preview":{"port":3000,"browser":true,"watch-inputs":true,"navigate":true},"page-layout":"full","toc-location":"right","code-summary":"Show the code","code-copy":"hover"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}