{"title":"Gram-Schmidt Orthogonalization","markdown":{"yaml":{"title":"Gram-Schmidt Orthogonalization","author":"Nathan Lunceford","format":{"html":{"self-contained":true,"page-layout":"full","toc":true,"toc-depth":1,"toc-location":"right","number-sections":false,"html-math-method":"katex","embed-resources":true,"code-fold":true,"code-summary":"Show the code","code-overflow":"wrap","code-copy":"hover","code-tools":{"source":false,"toggle":true,"caption":"See code"}}},"engine":"jupyter","preview":{"port":3000,"browser":true,"watch-inputs":true,"navigate":true}},"headingText":"Overview","containsRefs":false,"markdown":"\n\n\nThe Gram-Schmidt Orthogonalization process is a fundamental technique in linear algebra for transforming a set of linearly independent vectors into an orthogonal (or orthonormal) set that spans the same subspace. This method is widely used in applications such as QR factorization, solving [**least squares problems**](./least-squares.html), and numerical linear algebra. This note explores the definition, properties, computation, and applications of the Gram-Schmidt process.\n\n## Definition and Process\n\nGiven a set of linearly independent vectors $A_1, A_2, \\dots, A_n$, the Gram-Schmidt process produces an orthogonal (or orthonormal) set of vectors $q_1, q_2, \\dots, q_n$ such that:\n\n1. Each vector $q_i$ is orthogonal to the previous vectors $q_1, q_2, \\dots, q_{i-1}$.\n2. The span of $q_1, q_2, \\dots, q_n$ is the same as the span of $A_1, A_2, \\dots, A_n$.\n\nThis orthogonal set can also be normalized to create an orthonormal basis.\n\n## Steps of the Gram-Schmidt Process\n\nThe Gram-Schmidt process involves the following steps:\n\n1. **Initialize with the First Vector**: Set $q_1$ as the normalized version of $A_1$:\n\n   $$\n   q_1 = \\frac{A_1}{\\|A_1\\|}\n   $$\n\n2. **Compute Subsequent Vectors**: For each vector $A_i$, construct a new vector $u_i$ by subtracting components that align with previously computed $q$-vectors. Normalize $u_i$ to obtain $q_i$:\n   - Define the non-normalized vector $u_i$:\n     $$\n     u_i = A_i - \\sum_{j=1}^{i-1} (q_j \\cdot A_i) \\, q_j\n     $$\n   - Normalize $u_i$ to obtain $q_i$:\n     $$\n     q_i = \\frac{u_i}{\\|u_i\\|}\n     $$\n\nEach vector $q_i$ is thus orthogonal to the preceding $q$-vectors and has unit length if normalized.\n\n## Example\n\nGiven vectors $A_1$ and $A_2$, the Gram-Schmidt process works as follows:\n\n1. **Calculate $q_1$**:\n\n   $$\n   q_1 = \\frac{A_1}{\\|A_1\\|}\n   $$\n\n2. **Calculate $q_2$**:\n   - First, remove the component of $A_2$ in the direction of $q_1$ to obtain $u_2$:\n     $$\n     u_2 = A_2 - (q_1 \\cdot A_2) q_1\n     $$\n   - Then, normalize $u_2$ to get $q_2$:\n     $$\n     q_2 = \\frac{u_2}{\\|u_2\\|}\n     $$\n\n## Properties of Gram-Schmidt Orthogonalization\n\n- **Orthogonality**: Each vector $q_i$ is orthogonal to all previously generated vectors $q_1, \\dots, q_{i-1}$.\n- **Span Preservation**: The set $\\{q_1, q_2, \\dots, q_n\\}$ spans the same subspace as the original set $\\{A_1, A_2, \\dots, A_n\\}$.\n- **Orthonormal Basis**: By normalizing each $u_i$ to get $q_i$, the process yields an orthonormal basis for the subspace.\n\n## Applications of Gram-Schmidt Orthogonalization\n\nGram-Schmidt orthogonalization is widely applied in various fields due to its utility in creating orthogonal bases:\n\n- **QR Factorization**: Used to decompose a matrix into an orthogonal matrix $Q$ and an upper triangular matrix $R$.\n- [**Least Squares Problems**](./least-squares.html): Assists in minimizing the error in fitting data to a model by creating orthogonal projections.\n- **Signal Processing and Data Compression**: Forms the foundation for methods that reduce redundancy by representing data in orthogonal bases.\n- **Machine Learning and Statistics**: Simplifies computations by projecting data onto orthogonal components.\n\n## Example Problem\n\n**Problem:** Given the vectors\n\n$$\nA_1 = \\begin{pmatrix} 1 \\\\ 2 \\\\ 3 \\end{pmatrix}, \\quad A_2 = \\begin{pmatrix} 4 \\\\ 5 \\\\ 6 \\end{pmatrix}\n$$\n\n1. **Use Gram-Schmidt to find orthogonal vectors $q_1$ and $q_2$**.\n2. **Normalize $q_1$ and $q_2$ to form an orthonormal basis.**\n\n### Solution Steps\n\n1. **Compute $q_1$** by normalizing $A_1$.\n2. **Calculate $u_2$** by removing the component of $A_2$ in the direction of $q_1$.\n3. **Normalize $u_2$ to obtain $q_2$**.\n\n## Conclusion\n\nThe Gram-Schmidt process is a valuable tool in linear algebra for constructing orthogonal (or orthonormal) bases. By transforming a set of linearly independent vectors, it simplifies many matrix operations and lays the groundwork for QR factorization, data projections, and error minimization in least squares problems.\n","srcMarkdownNoYaml":"\n\n## Overview\n\nThe Gram-Schmidt Orthogonalization process is a fundamental technique in linear algebra for transforming a set of linearly independent vectors into an orthogonal (or orthonormal) set that spans the same subspace. This method is widely used in applications such as QR factorization, solving [**least squares problems**](./least-squares.html), and numerical linear algebra. This note explores the definition, properties, computation, and applications of the Gram-Schmidt process.\n\n## Definition and Process\n\nGiven a set of linearly independent vectors $A_1, A_2, \\dots, A_n$, the Gram-Schmidt process produces an orthogonal (or orthonormal) set of vectors $q_1, q_2, \\dots, q_n$ such that:\n\n1. Each vector $q_i$ is orthogonal to the previous vectors $q_1, q_2, \\dots, q_{i-1}$.\n2. The span of $q_1, q_2, \\dots, q_n$ is the same as the span of $A_1, A_2, \\dots, A_n$.\n\nThis orthogonal set can also be normalized to create an orthonormal basis.\n\n## Steps of the Gram-Schmidt Process\n\nThe Gram-Schmidt process involves the following steps:\n\n1. **Initialize with the First Vector**: Set $q_1$ as the normalized version of $A_1$:\n\n   $$\n   q_1 = \\frac{A_1}{\\|A_1\\|}\n   $$\n\n2. **Compute Subsequent Vectors**: For each vector $A_i$, construct a new vector $u_i$ by subtracting components that align with previously computed $q$-vectors. Normalize $u_i$ to obtain $q_i$:\n   - Define the non-normalized vector $u_i$:\n     $$\n     u_i = A_i - \\sum_{j=1}^{i-1} (q_j \\cdot A_i) \\, q_j\n     $$\n   - Normalize $u_i$ to obtain $q_i$:\n     $$\n     q_i = \\frac{u_i}{\\|u_i\\|}\n     $$\n\nEach vector $q_i$ is thus orthogonal to the preceding $q$-vectors and has unit length if normalized.\n\n## Example\n\nGiven vectors $A_1$ and $A_2$, the Gram-Schmidt process works as follows:\n\n1. **Calculate $q_1$**:\n\n   $$\n   q_1 = \\frac{A_1}{\\|A_1\\|}\n   $$\n\n2. **Calculate $q_2$**:\n   - First, remove the component of $A_2$ in the direction of $q_1$ to obtain $u_2$:\n     $$\n     u_2 = A_2 - (q_1 \\cdot A_2) q_1\n     $$\n   - Then, normalize $u_2$ to get $q_2$:\n     $$\n     q_2 = \\frac{u_2}{\\|u_2\\|}\n     $$\n\n## Properties of Gram-Schmidt Orthogonalization\n\n- **Orthogonality**: Each vector $q_i$ is orthogonal to all previously generated vectors $q_1, \\dots, q_{i-1}$.\n- **Span Preservation**: The set $\\{q_1, q_2, \\dots, q_n\\}$ spans the same subspace as the original set $\\{A_1, A_2, \\dots, A_n\\}$.\n- **Orthonormal Basis**: By normalizing each $u_i$ to get $q_i$, the process yields an orthonormal basis for the subspace.\n\n## Applications of Gram-Schmidt Orthogonalization\n\nGram-Schmidt orthogonalization is widely applied in various fields due to its utility in creating orthogonal bases:\n\n- **QR Factorization**: Used to decompose a matrix into an orthogonal matrix $Q$ and an upper triangular matrix $R$.\n- [**Least Squares Problems**](./least-squares.html): Assists in minimizing the error in fitting data to a model by creating orthogonal projections.\n- **Signal Processing and Data Compression**: Forms the foundation for methods that reduce redundancy by representing data in orthogonal bases.\n- **Machine Learning and Statistics**: Simplifies computations by projecting data onto orthogonal components.\n\n## Example Problem\n\n**Problem:** Given the vectors\n\n$$\nA_1 = \\begin{pmatrix} 1 \\\\ 2 \\\\ 3 \\end{pmatrix}, \\quad A_2 = \\begin{pmatrix} 4 \\\\ 5 \\\\ 6 \\end{pmatrix}\n$$\n\n1. **Use Gram-Schmidt to find orthogonal vectors $q_1$ and $q_2$**.\n2. **Normalize $q_1$ and $q_2$ to form an orthonormal basis.**\n\n### Solution Steps\n\n1. **Compute $q_1$** by normalizing $A_1$.\n2. **Calculate $u_2$** by removing the component of $A_2$ in the direction of $q_1$.\n3. **Normalize $u_2$ to obtain $q_2$**.\n\n## Conclusion\n\nThe Gram-Schmidt process is a valuable tool in linear algebra for constructing orthogonal (or orthonormal) bases. By transforming a set of linearly independent vectors, it simplifies many matrix operations and lays the groundwork for QR factorization, data projections, and error minimization in least squares problems.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":{"source":false,"toggle":true,"caption":"See code"},"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"self-contained":true,"toc-depth":1,"number-sections":false,"html-math-method":"katex","embed-resources":true,"output-file":"gram-schmidt-orthogonalization.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","theme":{"light":"flatly","dark":"darkly"},"title":"Gram-Schmidt Orthogonalization","author":"Nathan Lunceford","preview":{"port":3000,"browser":true,"watch-inputs":true,"navigate":true},"page-layout":"full","toc-location":"right","code-summary":"Show the code","code-copy":"hover"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}