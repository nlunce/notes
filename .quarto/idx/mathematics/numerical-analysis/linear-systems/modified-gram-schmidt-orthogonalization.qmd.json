{"title":"Modified Gram-Schmidt Orthogonalization","markdown":{"yaml":{"title":"Modified Gram-Schmidt Orthogonalization","author":"Nathan Lunceford","format":{"html":{"self-contained":true,"page-layout":"full","toc":true,"toc-depth":3,"toc-location":"right","number-sections":false,"html-math-method":"katex","embed-resources":true,"code-fold":true,"code-summary":"Show the code","code-overflow":"wrap","code-copy":"hover","code-tools":{"source":false,"toggle":true,"caption":"See code"}}},"engine":"jupyter","preview":{"port":3000,"browser":true,"watch-inputs":true,"navigate":true}},"headingText":"**Overview**","containsRefs":false,"markdown":"\n\n\nThe **Modified Gram-Schmidt Orthogonalization (MGS)** is a variation of the [**classical Gram-Schmidt process**](./gram-schmidt-orthogonalization.html) that improves numerical stability during computations. While it produces the same mathematical results as the classical process, MGS incrementally updates the working vector, avoiding the accumulation of rounding errors. This is especially beneficial when working with floating-point arithmetic in machine computations.\n\n## **Definition and Process**\n\nGiven a set of linearly independent vectors $A_1, A_2, \\dots, A_n$, the Modified Gram-Schmidt process produces an orthogonal (or orthonormal) set of vectors $q_1, q_2, \\dots, q_n$ such that:\n\n1. Each vector $q_i$ is orthogonal to the previous vectors $q_1, q_2, \\dots, q_{i-1}$.\n2. The span of $q_1, q_2, \\dots, q_n$ is the same as the span of $A_1, A_2, \\dots, A_n$.\n\nThe primary distinction of MGS is its incremental update of the working vector $y$, ensuring orthogonality is preserved at every step.\n\n## **Steps of the Modified Gram-Schmidt Process**\n\n1. **Initialize with the First Vector**: Normalize $A_1$ to obtain $q_1$:\n\n   $$\n   q_1 = \\frac{A_1}{\\|A_1\\|}\n   $$\n\n2. **Compute Subsequent Vectors Incrementally**:\n\n   - Start with $y = A_i$ (the current vector being processed).\n   - Subtract the projections of $y$ onto all previously computed $q_j$ vectors, updating $y$ step-by-step:\n     $$\n     y \\gets y - (q_j^\\top y) q_j \\quad \\text{for } j = 1, 2, \\dots, i-1\n     $$\n   - Normalize the updated $y$ to obtain $q_i$:\n     $$\n     q_i = \\frac{y}{\\|y\\|}\n     $$\n\n3. Repeat this process for all vectors $A_i$.\n\n## Differences Between Classical and Modified Gram-Schmidt\n\n<style>\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        border: 1px solid black; \n    }\n    th, td {\n        border: 1px solid black; \n        text-align: center;\n        vertical-align: top;\n        font-family: Arial, sans-serif;\n        padding: 5px;\n    }\n</style>\n\n<table>\n    <tr>\n        <th>Aspect</th>\n        <th>Classical Gram-Schmidt</th>\n        <th>Modified Gram-Schmidt</th>\n    </tr>\n    <tr>\n        <td><strong>Projection Calculation</strong></td>\n        <td>Subtracts all projections at once.</td>\n        <td>Subtracts projections incrementally, one at a time.</td>\n    </tr>\n    <tr>\n        <td><strong>Numerical Stability</strong></td>\n        <td>Prone to rounding errors, especially for small or nearly parallel vectors.</td>\n        <td>Less prone to rounding errors due to incremental updates.</td>\n    </tr>\n    <tr>\n        <td><strong>Intermediate Vector Updates</strong></td>\n        <td>Projections are computed using the original vector, so errors accumulate.</td>\n        <td>Projections are computed step-by-step using updated vectors, reducing error propagation.</td>\n    </tr>\n    <tr>\n        <td><strong>Orthogonality of Output</strong></td>\n        <td>Orthogonality may degrade due to numerical issues.</td>\n        <td>Better orthogonality preservation in finite-precision arithmetic.</td>\n    </tr>\n    <tr>\n        <td><strong>Use Case</strong></td>\n        <td>Useful for theoretical computations and small-scale problems.</td>\n        <td>Preferred for numerical applications and large-scale computations.</td>\n    </tr>\n</table>\n\n## **Properties of Modified Gram-Schmidt Orthogonalization**\n\n- **Orthogonality**: Each vector $q_i$ is orthogonal to all previously generated vectors $q_1, \\dots, q_{i-1}$.\n- **Span Preservation**: The set $\\{q_1, q_2, \\dots, q_n\\}$ spans the same subspace as $\\{A_1, A_2, \\dots, A_n\\}$.\n- **Numerical Stability**: Incremental updates reduce the impact of rounding errors, making it more robust in practice.\n\n## **Example Problem**\n\n**Problem:** Given the matrix\n\n$$\n\\mathbf{A} =\n\\begin{bmatrix}\n1 & 1 & 1 \\\\\n\\delta & 0 & 0 \\\\\n0 & \\delta & 0 \\\\\n0 & 0 & \\delta\n\\end{bmatrix}, \\quad \\delta = 10^{-10}\n$$\n\nfind the orthonormal basis $Q = [q_1, q_2, q_3]$ using the Modified Gram-Schmidt process.\n\n### **Solution Steps**\n\n1. **Compute $q_1$:**\n   Normalize $A_1$:\n\n   $$\n   q_1 = \\frac{A_1}{\\|A_1\\|} =\n   \\begin{bmatrix}\n   1 \\\\ \\delta \\\\ 0 \\\\ 0\n   \\end{bmatrix}\n   $$\n\n2. **Compute $q_2$:**\n\n   - Start with $y = A_2 = \\begin{bmatrix} 1 \\\\ 0 \\\\ \\delta \\\\ 0 \\end{bmatrix}$.\n   - Subtract the projection onto $q_1$:\n\n     $$\n     \\text{proj}_{q_1}(y) = (q_1^\\top y) q_1, \\quad q_1^\\top y = 1\n     $$\n\n     $$\n     y \\gets y - \\text{proj}_{q_1}(y) =\n     \\begin{bmatrix}\n     1 \\\\ 0 \\\\ \\delta \\\\ 0\n     \\end{bmatrix}\n     -\n     \\begin{bmatrix}\n     1 \\\\ \\delta \\\\ 0 \\\\ 0\n     \\end{bmatrix}\n     =\n     \\begin{bmatrix}\n     0 \\\\ -\\delta \\\\ \\delta \\\\ 0\n     \\end{bmatrix}\n     $$\n\n   - Normalize $y$:\n     $$\n     q_2 = \\frac{y}{\\|y\\|} = \\frac{1}{\\delta \\sqrt{2}}\n     \\begin{bmatrix}\n     0 \\\\ -\\delta \\\\ \\delta \\\\ 0\n     \\end{bmatrix}\n     =\n     \\begin{bmatrix}\n     0 \\\\ -\\frac{1}{\\sqrt{2}} \\\\ \\frac{1}{\\sqrt{2}} \\\\ 0\n     \\end{bmatrix}\n     $$\n\n3. **Compute $q_3$:**\n   - Start with $y = A_3 = \\begin{bmatrix} 1 \\\\ 0 \\\\ 0 \\\\ \\delta \\end{bmatrix}$.\n   - Subtract the projection onto $q_1$:\n     $$\n     y \\gets y - \\text{proj}_{q_1}(y), \\quad \\text{proj}_{q_1}(y) =\n     \\begin{bmatrix}\n     1 \\\\ \\delta \\\\ 0 \\\\ 0\n     \\end{bmatrix}\n     $$\n     $$\n     y = \\begin{bmatrix} 1 \\\\ 0 \\\\ 0 \\\\ \\delta \\end{bmatrix} -\n     \\begin{bmatrix} 1 \\\\ \\delta \\\\ 0 \\\\ 0 \\end{bmatrix} =\n     \\begin{bmatrix} 0 \\\\ -\\delta \\\\ 0 \\\\ \\delta \\end{bmatrix}\n     $$\n   - Subtract the projection onto $q_2$:\n     $$\n     y \\gets y - \\text{proj}_{q_2}(y), \\quad q_2^\\top y = \\frac{\\delta}{\\sqrt{2}}\n     $$\n     $$\n     y = \\begin{bmatrix} 0 \\\\ -\\delta \\\\ 0 \\\\ \\delta \\end{bmatrix} -\n     \\begin{bmatrix} 0 \\\\ -\\frac{\\delta}{2} \\\\ \\frac{\\delta}{2} \\\\ 0 \\end{bmatrix} =\n     \\begin{bmatrix} 0 \\\\ -\\frac{\\delta}{2} \\\\ -\\frac{\\delta}{2} \\\\ \\delta \\end{bmatrix}\n     $$\n   - Normalize $y$:\n     $$\n     q_3 = \\frac{1}{\\|y\\|} \\begin{bmatrix} 0 \\\\ -\\frac{\\delta}{2} \\\\ -\\frac{\\delta}{2} \\\\ \\delta \\end{bmatrix} =\n     \\begin{bmatrix}\n     0 \\\\ -\\frac{1}{\\sqrt{6}} \\\\ -\\frac{1}{\\sqrt{6}} \\\\ \\frac{2}{\\sqrt{6}}\n     \\end{bmatrix}\n     $$\n\n## **Conclusion**\n\nModified Gram-Schmidt is a more stable alternative to the classical process, particularly when dealing with small or near-parallel vectors. By incrementally updating the working vector $y$, MGS ensures numerical stability and maintains orthogonality even in the presence of rounding errors. It is especially useful in applications like QR factorization and solving least squares problems in computational settings.\n","srcMarkdownNoYaml":"\n\n## **Overview**\n\nThe **Modified Gram-Schmidt Orthogonalization (MGS)** is a variation of the [**classical Gram-Schmidt process**](./gram-schmidt-orthogonalization.html) that improves numerical stability during computations. While it produces the same mathematical results as the classical process, MGS incrementally updates the working vector, avoiding the accumulation of rounding errors. This is especially beneficial when working with floating-point arithmetic in machine computations.\n\n## **Definition and Process**\n\nGiven a set of linearly independent vectors $A_1, A_2, \\dots, A_n$, the Modified Gram-Schmidt process produces an orthogonal (or orthonormal) set of vectors $q_1, q_2, \\dots, q_n$ such that:\n\n1. Each vector $q_i$ is orthogonal to the previous vectors $q_1, q_2, \\dots, q_{i-1}$.\n2. The span of $q_1, q_2, \\dots, q_n$ is the same as the span of $A_1, A_2, \\dots, A_n$.\n\nThe primary distinction of MGS is its incremental update of the working vector $y$, ensuring orthogonality is preserved at every step.\n\n## **Steps of the Modified Gram-Schmidt Process**\n\n1. **Initialize with the First Vector**: Normalize $A_1$ to obtain $q_1$:\n\n   $$\n   q_1 = \\frac{A_1}{\\|A_1\\|}\n   $$\n\n2. **Compute Subsequent Vectors Incrementally**:\n\n   - Start with $y = A_i$ (the current vector being processed).\n   - Subtract the projections of $y$ onto all previously computed $q_j$ vectors, updating $y$ step-by-step:\n     $$\n     y \\gets y - (q_j^\\top y) q_j \\quad \\text{for } j = 1, 2, \\dots, i-1\n     $$\n   - Normalize the updated $y$ to obtain $q_i$:\n     $$\n     q_i = \\frac{y}{\\|y\\|}\n     $$\n\n3. Repeat this process for all vectors $A_i$.\n\n## Differences Between Classical and Modified Gram-Schmidt\n\n<style>\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        border: 1px solid black; \n    }\n    th, td {\n        border: 1px solid black; \n        text-align: center;\n        vertical-align: top;\n        font-family: Arial, sans-serif;\n        padding: 5px;\n    }\n</style>\n\n<table>\n    <tr>\n        <th>Aspect</th>\n        <th>Classical Gram-Schmidt</th>\n        <th>Modified Gram-Schmidt</th>\n    </tr>\n    <tr>\n        <td><strong>Projection Calculation</strong></td>\n        <td>Subtracts all projections at once.</td>\n        <td>Subtracts projections incrementally, one at a time.</td>\n    </tr>\n    <tr>\n        <td><strong>Numerical Stability</strong></td>\n        <td>Prone to rounding errors, especially for small or nearly parallel vectors.</td>\n        <td>Less prone to rounding errors due to incremental updates.</td>\n    </tr>\n    <tr>\n        <td><strong>Intermediate Vector Updates</strong></td>\n        <td>Projections are computed using the original vector, so errors accumulate.</td>\n        <td>Projections are computed step-by-step using updated vectors, reducing error propagation.</td>\n    </tr>\n    <tr>\n        <td><strong>Orthogonality of Output</strong></td>\n        <td>Orthogonality may degrade due to numerical issues.</td>\n        <td>Better orthogonality preservation in finite-precision arithmetic.</td>\n    </tr>\n    <tr>\n        <td><strong>Use Case</strong></td>\n        <td>Useful for theoretical computations and small-scale problems.</td>\n        <td>Preferred for numerical applications and large-scale computations.</td>\n    </tr>\n</table>\n\n## **Properties of Modified Gram-Schmidt Orthogonalization**\n\n- **Orthogonality**: Each vector $q_i$ is orthogonal to all previously generated vectors $q_1, \\dots, q_{i-1}$.\n- **Span Preservation**: The set $\\{q_1, q_2, \\dots, q_n\\}$ spans the same subspace as $\\{A_1, A_2, \\dots, A_n\\}$.\n- **Numerical Stability**: Incremental updates reduce the impact of rounding errors, making it more robust in practice.\n\n## **Example Problem**\n\n**Problem:** Given the matrix\n\n$$\n\\mathbf{A} =\n\\begin{bmatrix}\n1 & 1 & 1 \\\\\n\\delta & 0 & 0 \\\\\n0 & \\delta & 0 \\\\\n0 & 0 & \\delta\n\\end{bmatrix}, \\quad \\delta = 10^{-10}\n$$\n\nfind the orthonormal basis $Q = [q_1, q_2, q_3]$ using the Modified Gram-Schmidt process.\n\n### **Solution Steps**\n\n1. **Compute $q_1$:**\n   Normalize $A_1$:\n\n   $$\n   q_1 = \\frac{A_1}{\\|A_1\\|} =\n   \\begin{bmatrix}\n   1 \\\\ \\delta \\\\ 0 \\\\ 0\n   \\end{bmatrix}\n   $$\n\n2. **Compute $q_2$:**\n\n   - Start with $y = A_2 = \\begin{bmatrix} 1 \\\\ 0 \\\\ \\delta \\\\ 0 \\end{bmatrix}$.\n   - Subtract the projection onto $q_1$:\n\n     $$\n     \\text{proj}_{q_1}(y) = (q_1^\\top y) q_1, \\quad q_1^\\top y = 1\n     $$\n\n     $$\n     y \\gets y - \\text{proj}_{q_1}(y) =\n     \\begin{bmatrix}\n     1 \\\\ 0 \\\\ \\delta \\\\ 0\n     \\end{bmatrix}\n     -\n     \\begin{bmatrix}\n     1 \\\\ \\delta \\\\ 0 \\\\ 0\n     \\end{bmatrix}\n     =\n     \\begin{bmatrix}\n     0 \\\\ -\\delta \\\\ \\delta \\\\ 0\n     \\end{bmatrix}\n     $$\n\n   - Normalize $y$:\n     $$\n     q_2 = \\frac{y}{\\|y\\|} = \\frac{1}{\\delta \\sqrt{2}}\n     \\begin{bmatrix}\n     0 \\\\ -\\delta \\\\ \\delta \\\\ 0\n     \\end{bmatrix}\n     =\n     \\begin{bmatrix}\n     0 \\\\ -\\frac{1}{\\sqrt{2}} \\\\ \\frac{1}{\\sqrt{2}} \\\\ 0\n     \\end{bmatrix}\n     $$\n\n3. **Compute $q_3$:**\n   - Start with $y = A_3 = \\begin{bmatrix} 1 \\\\ 0 \\\\ 0 \\\\ \\delta \\end{bmatrix}$.\n   - Subtract the projection onto $q_1$:\n     $$\n     y \\gets y - \\text{proj}_{q_1}(y), \\quad \\text{proj}_{q_1}(y) =\n     \\begin{bmatrix}\n     1 \\\\ \\delta \\\\ 0 \\\\ 0\n     \\end{bmatrix}\n     $$\n     $$\n     y = \\begin{bmatrix} 1 \\\\ 0 \\\\ 0 \\\\ \\delta \\end{bmatrix} -\n     \\begin{bmatrix} 1 \\\\ \\delta \\\\ 0 \\\\ 0 \\end{bmatrix} =\n     \\begin{bmatrix} 0 \\\\ -\\delta \\\\ 0 \\\\ \\delta \\end{bmatrix}\n     $$\n   - Subtract the projection onto $q_2$:\n     $$\n     y \\gets y - \\text{proj}_{q_2}(y), \\quad q_2^\\top y = \\frac{\\delta}{\\sqrt{2}}\n     $$\n     $$\n     y = \\begin{bmatrix} 0 \\\\ -\\delta \\\\ 0 \\\\ \\delta \\end{bmatrix} -\n     \\begin{bmatrix} 0 \\\\ -\\frac{\\delta}{2} \\\\ \\frac{\\delta}{2} \\\\ 0 \\end{bmatrix} =\n     \\begin{bmatrix} 0 \\\\ -\\frac{\\delta}{2} \\\\ -\\frac{\\delta}{2} \\\\ \\delta \\end{bmatrix}\n     $$\n   - Normalize $y$:\n     $$\n     q_3 = \\frac{1}{\\|y\\|} \\begin{bmatrix} 0 \\\\ -\\frac{\\delta}{2} \\\\ -\\frac{\\delta}{2} \\\\ \\delta \\end{bmatrix} =\n     \\begin{bmatrix}\n     0 \\\\ -\\frac{1}{\\sqrt{6}} \\\\ -\\frac{1}{\\sqrt{6}} \\\\ \\frac{2}{\\sqrt{6}}\n     \\end{bmatrix}\n     $$\n\n## **Conclusion**\n\nModified Gram-Schmidt is a more stable alternative to the classical process, particularly when dealing with small or near-parallel vectors. By incrementally updating the working vector $y$, MGS ensures numerical stability and maintains orthogonality even in the presence of rounding errors. It is especially useful in applications like QR factorization and solving least squares problems in computational settings.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":{"source":false,"toggle":true,"caption":"See code"},"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"self-contained":true,"toc-depth":3,"number-sections":false,"html-math-method":"katex","embed-resources":true,"output-file":"modified-gram-schmidt-orthogonalization.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","theme":{"light":"flatly","dark":"darkly"},"title":"Modified Gram-Schmidt Orthogonalization","author":"Nathan Lunceford","preview":{"port":3000,"browser":true,"watch-inputs":true,"navigate":true},"page-layout":"full","toc-location":"right","code-summary":"Show the code","code-copy":"hover"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}