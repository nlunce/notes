{"title":"Understanding the Error Magnification Factor (EMF)","markdown":{"yaml":{"title":"Understanding the Error Magnification Factor (EMF)","author":"Nathan Lunceford","format":{"html":{"self-contained":true,"page-layout":"full","toc":true,"toc-depth":3,"toc-location":"right","number-sections":false,"html-math-method":"katex","embed-resources":true,"code-fold":true,"code-summary":"Show Code","code-overflow":"wrap","code-copy":"hover","code-tools":{"source":false,"toggle":true,"caption":"See code"}}},"engine":"jupyter","preview":{"port":3000,"browser":true,"watch-inputs":true,"navigate":true}},"headingText":"**Overview**","containsRefs":false,"markdown":"\n\n\nWhen tackling mathematical problems, especially those involving systems of equations, understanding how errors influence the solutions is paramount. The **Error Magnification Factor (EMF)** is a crucial tool that allows us to analyze the relationship between different types of errors in numerical computations, helping us assess the reliability and stability of our solutions.\n\n## **What is EMF?**\n\nThe **Error Magnification Factor (EMF)** quantifies how an initial error, known as the [**backward error**](./backward-error.html), is amplified when computing a solution, leading to the [**forward error**](./forward-error.html). Think of EMF as a magnifying glass that reveals how minor inaccuracies can escalate into significant discrepancies in the final answer.\n\nMathematically, EMF is defined as:\n\n$$\n\\text{EMF} = \\frac{\\text{Relative Forward Error (RFE)}}{\\text{Relative Backward Error (RBE)}}\n$$\n\n### **Breaking Down the Components**\n\n- [**Relative Forward Error (RFE)**](./relative-forward-error.html): Measures the deviation of the computed solution from the true solution relative to the true solution's magnitude.\n\n  $$\n  \\text{RFE} = \\frac{\\|\\mathbf{x} - \\mathbf{x_a}\\|_\\infty}{\\|\\mathbf{x}\\|_\\infty}\n  $$\n\n- [**Relative Backward Error (RBE)**](./relative-backward-error.html): Quantifies the adjustment needed in the original problem data to make the computed solution exact, relative to the input data's magnitude.\n\n  $$\n  \\text{RBE} = \\frac{\\|\\mathbf{b} - A\\mathbf{x_a}\\|_\\infty}{\\|\\mathbf{b}\\|_\\infty}\n  $$\n\nSubstituting these into the EMF formula:\n\n$$\n\\text{EMF} = \\frac{\\|\\mathbf{x} - \\mathbf{x_a}\\|_\\infty / \\|\\mathbf{x}\\|_\\infty}{\\|\\mathbf{b} - A\\mathbf{x_a}\\|_\\infty / \\|\\mathbf{b}\\|_\\infty} = \\frac{\\|\\mathbf{x} - \\mathbf{x_a}\\|_\\infty}{\\|\\mathbf{x}\\|_\\infty} \\cdot \\frac{\\|\\mathbf{b}\\|_\\infty}{\\|\\mathbf{b} - A\\mathbf{x_a}\\|_\\infty}\n$$\n\nWhere:\n\n- $\\mathbf{x}$: **True Solution**\n- $\\mathbf{x_a}$: **Approximate (Computed) Solution**\n- $\\mathbf{b}$: **Original Input Data**\n- $A$: **Coefficient Matrix** in the system of equations\n\n## **What EMF Represents**\n\nUnderstanding EMF involves dissecting its components and recognizing what they reveal about the system under analysis.\n\n### **1. Forward vs. Backward Error**\n\n- **Backward Error (RBE)**: Think of it as a small mistake in the initial setup of a problem, such as an incorrect measurement or input. It quantifies this initial discrepancy.\n- **Forward Error (RFE)**: Represents how this initial mistake propagates and affects the final solution, showing the deviation from the intended outcome.\n\n**EMF** bridges these two by indicating how much an initial error (RBE) influences the final result (RFE). A higher EMF implies that even minor initial errors can lead to significant deviations in the solution.\n\n### **2. Sensitivity of Solutions**\n\n- **High EMF**: Indicates that the system is **sensitive** or **unstable**. Small errors in the input data can cause large errors in the solution.\n- **Low EMF**: Suggests that the system is **stable**, with errors in input data having minimal impact on the solution.\n\n### **3. Well-Conditioned vs. Ill-Conditioned Systems**\n\n- **Well-Conditioned Systems**: EMF values close to 1. Errors do not get significantly magnified, making the solutions reliable.\n- **Ill-Conditioned Systems**: High EMF values. Small errors can lead to large discrepancies in solutions, rendering them unreliable.\n\n## **Why EMF Matters**\n\nUnderstanding EMF is essential for several reasons:\n\n- **Stability Analysis**: EMF helps determine whether a numerical algorithm will produce reliable results or amplify errors.\n- **Condition Number Connection**: EMF is related to the condition number of matrix $A$, another measure of sensitivity in systems.\n- **Error Propagation**: By analyzing EMF, we can predict how errors in our input data will affect the final solution, enabling us to take corrective measures.\n\n## **A Practical Example**\n\nLet's delve into a concrete example to illustrate how EMF operates in practice.\n\n### **The Problem Setup**\n\nConsider the system of equations:\n\n$$\nA\\mathbf{x} = \\mathbf{b}\n$$\n\nWhere:\n\n- $\\mathbf{x} = \\begin{bmatrix} 2 \\\\ 1 \\end{bmatrix}$ is the **true solution**.\n- $\\mathbf{x_a} = \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix}$ is the **approximate solution**.\n- $\\mathbf{b} = \\begin{bmatrix} 3 \\\\ 2 \\end{bmatrix}$ is the **input data**.\n- $A = \\begin{bmatrix} 1 & 1 \\\\ 3 & -4 \\end{bmatrix}$ is the **coefficient matrix**.\n\n### **Step 1: Compute the Relative Forward Error (RFE)**\n\nThe RFE measures the deviation of the computed solution from the true solution.\n\n$$\n\\text{RFE} = \\frac{\\|\\mathbf{x} - \\mathbf{x_a}\\|_\\infty}{\\|\\mathbf{x}\\|_\\infty}\n$$\n\n**Calculations:**\n\n1. **Difference Vector**:\n\n   $$\n   \\mathbf{e} = \\mathbf{x} - \\mathbf{x_a} = \\begin{bmatrix} 2 \\\\ 1 \\end{bmatrix} - \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 2 \\end{bmatrix}\n   $$\n\n2. **Infinity Norm of $\\mathbf{e}$**:\n\n   $$\n   \\|\\mathbf{e}\\|_\\infty = \\max(|1|, |2|) = 2\n   $$\n\n3. **Infinity Norm of $\\mathbf{x}$**:\n\n   $$\n   \\|\\mathbf{x}\\|_\\infty = \\max(|2|, |1|) = 2\n   $$\n\n4. **RFE**:\n\n   $$\n   \\text{RFE} = \\frac{2}{2} = 1\n   $$\n\n### **Step 2: Compute the Relative Backward Error (RBE)**\n\nThe RBE measures the adjustment needed in the original input data to make the computed solution exact.\n\n$$\n\\text{RBE} = \\frac{\\|\\mathbf{b} - A\\mathbf{x_a}\\|_\\infty}{\\|\\mathbf{b}\\|_\\infty}\n$$\n\n**Calculations:**\n\n1. **Compute $A\\mathbf{x_a}$**:\n\n   $$\n   A\\mathbf{x_a} = \\begin{bmatrix} 1 \\cdot 1 + 1 \\cdot (-1) \\\\ 3 \\cdot 1 + (-4) \\cdot (-1) \\end{bmatrix} = \\begin{bmatrix} 0 \\\\ 7 \\end{bmatrix}\n   $$\n\n2. **Residual Vector**:\n\n   $$\n   \\mathbf{r} = \\mathbf{b} - A\\mathbf{x_a} = \\begin{bmatrix} 3 \\\\ 2 \\end{bmatrix} - \\begin{bmatrix} 0 \\\\ 7 \\end{bmatrix} = \\begin{bmatrix} 3 \\\\ -5 \\end{bmatrix}\n   $$\n\n3. **Infinity Norm of $\\mathbf{r}$**:\n\n   $$\n   \\|\\mathbf{r}\\|_\\infty = \\max(|3|, |5|) = 5\n   $$\n\n4. **Infinity Norm of $\\mathbf{b}$**:\n\n   $$\n   \\|\\mathbf{b}\\|_\\infty = \\max(|3|, |2|) = 3\n   $$\n\n5. **RBE**:\n\n   $$\n   \\text{RBE} = \\frac{5}{3} \\approx 1.6667\n   $$\n\n### **Step 3: Compute the EMF**\n\nUsing the RFE and RBE:\n\n$$\n\\text{EMF} = \\frac{\\text{RFE}}{\\text{RBE}} = \\frac{1}{1.6667} \\approx 0.6\n$$\n\n### **Step 4: Interpretation**\n\nAn EMF of **0.6** implies that the backward error is magnified by a factor of 0.6 in the forward error. This indicates that the system is **moderately sensitive** but not highly unstable. While there is some error amplification, it isn't excessively large, suggesting a reasonable level of stability in the solution.\n\n## **Visualization of Errors**\n\nVisual representations can significantly enhance our understanding of EMF. Below is a refined graph that visually illustrates the backward and forward errors in our example, with synchronized domains and ranges for better comparison.\n\n### **Graph of EMF Components**\n\n```{python}\n#| label: emf-components\n#| code-summary: \"Show Code\"\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom matplotlib.patches import FancyArrowPatch\nfrom matplotlib.patches import Patch\nimport matplotlib.patheffects as pe\n\ndef create_fancy_arrow(start, end, color, width=2, alpha=1.0, zorder=5):\n    \"\"\"Create a fancy arrow without shadow effect for simplicity\"\"\"\n    arrow = FancyArrowPatch(\n        start, end,\n        arrowstyle='->',\n        color=color,\n        linewidth=width,\n        alpha=alpha,\n        zorder=zorder\n    )\n    return arrow\n\nx_true = np.array([2, 1])\nx_a = np.array([1, -1])\nb = np.array([3, 2])\nA = np.array([[1, 1], [3, -4]])\n\nAx_a = A @ x_a\nresidual = b - Ax_a\nforward_error = x_true - x_a\n\nall_vectors = [\n    [0, 0], b, Ax_a, x_true, x_a\n]\nmin_vals = np.min(all_vectors, axis=0) - 1\nmax_vals = np.max(all_vectors, axis=0) + 1\nx_min, x_max = min_vals[0], max_vals[0]\ny_min, y_max = min_vals[1], max_vals[1]\n\nplt.style.use('seaborn-v0_8-whitegrid')\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 8))\n\ncolors = {\n    'b': '#1f77b4',        # blue\n    'Ax_a': '#2ca02c',     # green\n    'residual': '#d62728', # red\n    'x_true': '#000000',   # black\n    'x_a': '#7f7f7f',      # gray\n    'forward': '#ff7f0e'   # orange\n}\n\ninput_vectors = [\n    ((0, 0), b, colors['b'], r'$\\mathbf{b}$'),\n    ((0, 0), Ax_a, colors['Ax_a'], r'$A\\mathbf{x}_a$'),\n    (Ax_a, b, colors['residual'], r'$\\mathbf{r}$')\n]\n\nfor start, end, color, name in input_vectors:\n    ax1.quiver(*start, *(np.array(end) - np.array(start)), color=color, angles='xy', scale_units='xy', scale=1, width=0.01, zorder=5)\n\n    vector = np.array(end) - np.array(start)\n    vector_norm = np.linalg.norm(vector)\n    if vector_norm > 0:\n        direction = vector / vector_norm\n    else:\n        direction = np.array([0, 0])\n\n    perp_direction = np.array([-direction[1], direction[0]])\n    offset = perp_direction * 0.5\n\n    if name == r'$A\\mathbf{x}_a$':\n        offset += np.array([-0.3, 0])\n\n    mid_point = np.array(start) + vector / 2\n    ax1.text(mid_point[0] + offset[0], mid_point[1] + offset[1],\n             name, color=color, fontsize=10, fontweight='bold', zorder=6)\n\nsolution_vectors = [\n    ((0, 0), x_true, colors['x_true'], r'$\\mathbf{x}$'),\n    ((0, 0), x_a, colors['x_a'], r'$\\mathbf{x}_a$'),\n    (x_a, x_true, colors['forward'], r'$\\mathbf{e}$')\n]\n\nfor start, end, color, name in solution_vectors:\n    ax2.quiver(*start, *(np.array(end) - np.array(start)), color=color, angles='xy', scale_units='xy', scale=1, width=0.01, zorder=5)\n\n    vector = np.array(end) - np.array(start)\n    mid_point = np.array(start) + vector / 2\n    offset = np.array([0.3, 0.3])\n\n    if name == r'$\\mathbf{x}_a$':\n        offset += np.array([-0.1, -0.3])\n\n    ax2.text(mid_point[0] + offset[0], mid_point[1] + offset[1],\n             name, color=color, fontsize=10, fontweight='bold', zorder=6)\n\nfor ax, title in zip([ax1, ax2], ['Input Space (Backward Error)', 'Solution Space (Forward Error)']):\n    ax.set_aspect('equal')\n\n    x_padding = (x_max - x_min) * 0.1\n    y_padding = (y_max - y_min) * 0.1\n    ax.set_xlim(x_min - x_padding, x_max + x_padding)\n    ax.set_ylim(y_min - y_padding, y_max + y_padding)\n\n    ax.set_title(title, fontsize=12, pad=15, fontweight='bold')\n\n    ax.set_xlabel('')\n    ax.set_ylabel('')\n\n    ax.grid(color='lightgray', linestyle='--', linewidth=0.7, zorder=0)\n\n    ax.axhline(0, color='black', linewidth=0.8, zorder=1)\n    ax.axvline(0, color='black', linewidth=0.8, zorder=1)\n\nlegend_elements = [\n    Patch(facecolor='none', edgecolor=colors['b'], label=r'$\\mathbf{b}$ (Input)'),\n    Patch(facecolor='none', edgecolor=colors['Ax_a'], label=r'$A\\mathbf{x}_a$ (Computed)'),\n    Patch(facecolor='none', edgecolor=colors['residual'], label=r'$\\mathbf{r}$ (Residual)'),\n    Patch(facecolor='none', edgecolor=colors['x_true'], label=r'$\\mathbf{x}$ (True Solution)'),\n    Patch(facecolor='none', edgecolor=colors['x_a'], label=r'$\\mathbf{x}_a$ (Approximate)'),\n    Patch(facecolor='none', edgecolor=colors['forward'], label=r'$\\mathbf{e}$ (Forward Error)')\n]\n\nfig.legend(handles=legend_elements,\n           loc='upper center',\n           bbox_to_anchor=(0.5, 0.05),\n           ncol=3,\n           fontsize=9)\n\nfig.suptitle('Error Magnification Factor Components', fontsize=14, y=0.98, fontweight='bold')\n\nplt.tight_layout()\nplt.subplots_adjust(top=0.87, bottom=0.15, right=0.95, wspace=-0.4)\n\nplt.show()\n```\n\n### **Explanation of the Visualization**\n\n- **Left Plot: Input Space (Backward Error)**\n\n  - **$\\mathbf{b}$ (Input)**: Represents the original input data vector.\n  - **$A\\mathbf{x}_a$ (Computed)**: The result of applying the coefficient matrix $A$ to the approximate solution $\\mathbf{x_a}$.\n  - **$\\mathbf{r}$ (Residual)**: The difference between the original input $\\mathbf{b}$ and the computed $A\\mathbf{x}_a$, indicating the backward error.\n\n- **Right Plot: Solution Space (Forward Error)**\n\n  - **$\\mathbf{x}$ (True Solution)**: The actual solution to the system.\n  - **$\\mathbf{x}_a$ (Approximate)**: The computed solution.\n  - **$\\mathbf{e}$ (Forward Error)**: The difference between the true solution and the approximate solution, representing the forward error.\n\nThe arrows visually demonstrate how the backward error in the input space relates to the forward error in the solution space, encapsulating the essence of the EMF.\n\n## **Conclusion**\n\nThe **Error Magnification Factor (EMF)** is a vital concept in numerical analysis, providing insight into how errors propagate through computational processes. By quantifying the relationship between backward and forward errors, EMF helps in assessing the stability and reliability of numerical solutions. Understanding and calculating EMF enables mathematicians and engineers to design more robust algorithms and make informed decisions when interpreting computational results.\n","srcMarkdownNoYaml":"\n\n## **Overview**\n\nWhen tackling mathematical problems, especially those involving systems of equations, understanding how errors influence the solutions is paramount. The **Error Magnification Factor (EMF)** is a crucial tool that allows us to analyze the relationship between different types of errors in numerical computations, helping us assess the reliability and stability of our solutions.\n\n## **What is EMF?**\n\nThe **Error Magnification Factor (EMF)** quantifies how an initial error, known as the [**backward error**](./backward-error.html), is amplified when computing a solution, leading to the [**forward error**](./forward-error.html). Think of EMF as a magnifying glass that reveals how minor inaccuracies can escalate into significant discrepancies in the final answer.\n\nMathematically, EMF is defined as:\n\n$$\n\\text{EMF} = \\frac{\\text{Relative Forward Error (RFE)}}{\\text{Relative Backward Error (RBE)}}\n$$\n\n### **Breaking Down the Components**\n\n- [**Relative Forward Error (RFE)**](./relative-forward-error.html): Measures the deviation of the computed solution from the true solution relative to the true solution's magnitude.\n\n  $$\n  \\text{RFE} = \\frac{\\|\\mathbf{x} - \\mathbf{x_a}\\|_\\infty}{\\|\\mathbf{x}\\|_\\infty}\n  $$\n\n- [**Relative Backward Error (RBE)**](./relative-backward-error.html): Quantifies the adjustment needed in the original problem data to make the computed solution exact, relative to the input data's magnitude.\n\n  $$\n  \\text{RBE} = \\frac{\\|\\mathbf{b} - A\\mathbf{x_a}\\|_\\infty}{\\|\\mathbf{b}\\|_\\infty}\n  $$\n\nSubstituting these into the EMF formula:\n\n$$\n\\text{EMF} = \\frac{\\|\\mathbf{x} - \\mathbf{x_a}\\|_\\infty / \\|\\mathbf{x}\\|_\\infty}{\\|\\mathbf{b} - A\\mathbf{x_a}\\|_\\infty / \\|\\mathbf{b}\\|_\\infty} = \\frac{\\|\\mathbf{x} - \\mathbf{x_a}\\|_\\infty}{\\|\\mathbf{x}\\|_\\infty} \\cdot \\frac{\\|\\mathbf{b}\\|_\\infty}{\\|\\mathbf{b} - A\\mathbf{x_a}\\|_\\infty}\n$$\n\nWhere:\n\n- $\\mathbf{x}$: **True Solution**\n- $\\mathbf{x_a}$: **Approximate (Computed) Solution**\n- $\\mathbf{b}$: **Original Input Data**\n- $A$: **Coefficient Matrix** in the system of equations\n\n## **What EMF Represents**\n\nUnderstanding EMF involves dissecting its components and recognizing what they reveal about the system under analysis.\n\n### **1. Forward vs. Backward Error**\n\n- **Backward Error (RBE)**: Think of it as a small mistake in the initial setup of a problem, such as an incorrect measurement or input. It quantifies this initial discrepancy.\n- **Forward Error (RFE)**: Represents how this initial mistake propagates and affects the final solution, showing the deviation from the intended outcome.\n\n**EMF** bridges these two by indicating how much an initial error (RBE) influences the final result (RFE). A higher EMF implies that even minor initial errors can lead to significant deviations in the solution.\n\n### **2. Sensitivity of Solutions**\n\n- **High EMF**: Indicates that the system is **sensitive** or **unstable**. Small errors in the input data can cause large errors in the solution.\n- **Low EMF**: Suggests that the system is **stable**, with errors in input data having minimal impact on the solution.\n\n### **3. Well-Conditioned vs. Ill-Conditioned Systems**\n\n- **Well-Conditioned Systems**: EMF values close to 1. Errors do not get significantly magnified, making the solutions reliable.\n- **Ill-Conditioned Systems**: High EMF values. Small errors can lead to large discrepancies in solutions, rendering them unreliable.\n\n## **Why EMF Matters**\n\nUnderstanding EMF is essential for several reasons:\n\n- **Stability Analysis**: EMF helps determine whether a numerical algorithm will produce reliable results or amplify errors.\n- **Condition Number Connection**: EMF is related to the condition number of matrix $A$, another measure of sensitivity in systems.\n- **Error Propagation**: By analyzing EMF, we can predict how errors in our input data will affect the final solution, enabling us to take corrective measures.\n\n## **A Practical Example**\n\nLet's delve into a concrete example to illustrate how EMF operates in practice.\n\n### **The Problem Setup**\n\nConsider the system of equations:\n\n$$\nA\\mathbf{x} = \\mathbf{b}\n$$\n\nWhere:\n\n- $\\mathbf{x} = \\begin{bmatrix} 2 \\\\ 1 \\end{bmatrix}$ is the **true solution**.\n- $\\mathbf{x_a} = \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix}$ is the **approximate solution**.\n- $\\mathbf{b} = \\begin{bmatrix} 3 \\\\ 2 \\end{bmatrix}$ is the **input data**.\n- $A = \\begin{bmatrix} 1 & 1 \\\\ 3 & -4 \\end{bmatrix}$ is the **coefficient matrix**.\n\n### **Step 1: Compute the Relative Forward Error (RFE)**\n\nThe RFE measures the deviation of the computed solution from the true solution.\n\n$$\n\\text{RFE} = \\frac{\\|\\mathbf{x} - \\mathbf{x_a}\\|_\\infty}{\\|\\mathbf{x}\\|_\\infty}\n$$\n\n**Calculations:**\n\n1. **Difference Vector**:\n\n   $$\n   \\mathbf{e} = \\mathbf{x} - \\mathbf{x_a} = \\begin{bmatrix} 2 \\\\ 1 \\end{bmatrix} - \\begin{bmatrix} 1 \\\\ -1 \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 2 \\end{bmatrix}\n   $$\n\n2. **Infinity Norm of $\\mathbf{e}$**:\n\n   $$\n   \\|\\mathbf{e}\\|_\\infty = \\max(|1|, |2|) = 2\n   $$\n\n3. **Infinity Norm of $\\mathbf{x}$**:\n\n   $$\n   \\|\\mathbf{x}\\|_\\infty = \\max(|2|, |1|) = 2\n   $$\n\n4. **RFE**:\n\n   $$\n   \\text{RFE} = \\frac{2}{2} = 1\n   $$\n\n### **Step 2: Compute the Relative Backward Error (RBE)**\n\nThe RBE measures the adjustment needed in the original input data to make the computed solution exact.\n\n$$\n\\text{RBE} = \\frac{\\|\\mathbf{b} - A\\mathbf{x_a}\\|_\\infty}{\\|\\mathbf{b}\\|_\\infty}\n$$\n\n**Calculations:**\n\n1. **Compute $A\\mathbf{x_a}$**:\n\n   $$\n   A\\mathbf{x_a} = \\begin{bmatrix} 1 \\cdot 1 + 1 \\cdot (-1) \\\\ 3 \\cdot 1 + (-4) \\cdot (-1) \\end{bmatrix} = \\begin{bmatrix} 0 \\\\ 7 \\end{bmatrix}\n   $$\n\n2. **Residual Vector**:\n\n   $$\n   \\mathbf{r} = \\mathbf{b} - A\\mathbf{x_a} = \\begin{bmatrix} 3 \\\\ 2 \\end{bmatrix} - \\begin{bmatrix} 0 \\\\ 7 \\end{bmatrix} = \\begin{bmatrix} 3 \\\\ -5 \\end{bmatrix}\n   $$\n\n3. **Infinity Norm of $\\mathbf{r}$**:\n\n   $$\n   \\|\\mathbf{r}\\|_\\infty = \\max(|3|, |5|) = 5\n   $$\n\n4. **Infinity Norm of $\\mathbf{b}$**:\n\n   $$\n   \\|\\mathbf{b}\\|_\\infty = \\max(|3|, |2|) = 3\n   $$\n\n5. **RBE**:\n\n   $$\n   \\text{RBE} = \\frac{5}{3} \\approx 1.6667\n   $$\n\n### **Step 3: Compute the EMF**\n\nUsing the RFE and RBE:\n\n$$\n\\text{EMF} = \\frac{\\text{RFE}}{\\text{RBE}} = \\frac{1}{1.6667} \\approx 0.6\n$$\n\n### **Step 4: Interpretation**\n\nAn EMF of **0.6** implies that the backward error is magnified by a factor of 0.6 in the forward error. This indicates that the system is **moderately sensitive** but not highly unstable. While there is some error amplification, it isn't excessively large, suggesting a reasonable level of stability in the solution.\n\n## **Visualization of Errors**\n\nVisual representations can significantly enhance our understanding of EMF. Below is a refined graph that visually illustrates the backward and forward errors in our example, with synchronized domains and ranges for better comparison.\n\n### **Graph of EMF Components**\n\n```{python}\n#| label: emf-components\n#| code-summary: \"Show Code\"\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom matplotlib.patches import FancyArrowPatch\nfrom matplotlib.patches import Patch\nimport matplotlib.patheffects as pe\n\ndef create_fancy_arrow(start, end, color, width=2, alpha=1.0, zorder=5):\n    \"\"\"Create a fancy arrow without shadow effect for simplicity\"\"\"\n    arrow = FancyArrowPatch(\n        start, end,\n        arrowstyle='->',\n        color=color,\n        linewidth=width,\n        alpha=alpha,\n        zorder=zorder\n    )\n    return arrow\n\nx_true = np.array([2, 1])\nx_a = np.array([1, -1])\nb = np.array([3, 2])\nA = np.array([[1, 1], [3, -4]])\n\nAx_a = A @ x_a\nresidual = b - Ax_a\nforward_error = x_true - x_a\n\nall_vectors = [\n    [0, 0], b, Ax_a, x_true, x_a\n]\nmin_vals = np.min(all_vectors, axis=0) - 1\nmax_vals = np.max(all_vectors, axis=0) + 1\nx_min, x_max = min_vals[0], max_vals[0]\ny_min, y_max = min_vals[1], max_vals[1]\n\nplt.style.use('seaborn-v0_8-whitegrid')\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 8))\n\ncolors = {\n    'b': '#1f77b4',        # blue\n    'Ax_a': '#2ca02c',     # green\n    'residual': '#d62728', # red\n    'x_true': '#000000',   # black\n    'x_a': '#7f7f7f',      # gray\n    'forward': '#ff7f0e'   # orange\n}\n\ninput_vectors = [\n    ((0, 0), b, colors['b'], r'$\\mathbf{b}$'),\n    ((0, 0), Ax_a, colors['Ax_a'], r'$A\\mathbf{x}_a$'),\n    (Ax_a, b, colors['residual'], r'$\\mathbf{r}$')\n]\n\nfor start, end, color, name in input_vectors:\n    ax1.quiver(*start, *(np.array(end) - np.array(start)), color=color, angles='xy', scale_units='xy', scale=1, width=0.01, zorder=5)\n\n    vector = np.array(end) - np.array(start)\n    vector_norm = np.linalg.norm(vector)\n    if vector_norm > 0:\n        direction = vector / vector_norm\n    else:\n        direction = np.array([0, 0])\n\n    perp_direction = np.array([-direction[1], direction[0]])\n    offset = perp_direction * 0.5\n\n    if name == r'$A\\mathbf{x}_a$':\n        offset += np.array([-0.3, 0])\n\n    mid_point = np.array(start) + vector / 2\n    ax1.text(mid_point[0] + offset[0], mid_point[1] + offset[1],\n             name, color=color, fontsize=10, fontweight='bold', zorder=6)\n\nsolution_vectors = [\n    ((0, 0), x_true, colors['x_true'], r'$\\mathbf{x}$'),\n    ((0, 0), x_a, colors['x_a'], r'$\\mathbf{x}_a$'),\n    (x_a, x_true, colors['forward'], r'$\\mathbf{e}$')\n]\n\nfor start, end, color, name in solution_vectors:\n    ax2.quiver(*start, *(np.array(end) - np.array(start)), color=color, angles='xy', scale_units='xy', scale=1, width=0.01, zorder=5)\n\n    vector = np.array(end) - np.array(start)\n    mid_point = np.array(start) + vector / 2\n    offset = np.array([0.3, 0.3])\n\n    if name == r'$\\mathbf{x}_a$':\n        offset += np.array([-0.1, -0.3])\n\n    ax2.text(mid_point[0] + offset[0], mid_point[1] + offset[1],\n             name, color=color, fontsize=10, fontweight='bold', zorder=6)\n\nfor ax, title in zip([ax1, ax2], ['Input Space (Backward Error)', 'Solution Space (Forward Error)']):\n    ax.set_aspect('equal')\n\n    x_padding = (x_max - x_min) * 0.1\n    y_padding = (y_max - y_min) * 0.1\n    ax.set_xlim(x_min - x_padding, x_max + x_padding)\n    ax.set_ylim(y_min - y_padding, y_max + y_padding)\n\n    ax.set_title(title, fontsize=12, pad=15, fontweight='bold')\n\n    ax.set_xlabel('')\n    ax.set_ylabel('')\n\n    ax.grid(color='lightgray', linestyle='--', linewidth=0.7, zorder=0)\n\n    ax.axhline(0, color='black', linewidth=0.8, zorder=1)\n    ax.axvline(0, color='black', linewidth=0.8, zorder=1)\n\nlegend_elements = [\n    Patch(facecolor='none', edgecolor=colors['b'], label=r'$\\mathbf{b}$ (Input)'),\n    Patch(facecolor='none', edgecolor=colors['Ax_a'], label=r'$A\\mathbf{x}_a$ (Computed)'),\n    Patch(facecolor='none', edgecolor=colors['residual'], label=r'$\\mathbf{r}$ (Residual)'),\n    Patch(facecolor='none', edgecolor=colors['x_true'], label=r'$\\mathbf{x}$ (True Solution)'),\n    Patch(facecolor='none', edgecolor=colors['x_a'], label=r'$\\mathbf{x}_a$ (Approximate)'),\n    Patch(facecolor='none', edgecolor=colors['forward'], label=r'$\\mathbf{e}$ (Forward Error)')\n]\n\nfig.legend(handles=legend_elements,\n           loc='upper center',\n           bbox_to_anchor=(0.5, 0.05),\n           ncol=3,\n           fontsize=9)\n\nfig.suptitle('Error Magnification Factor Components', fontsize=14, y=0.98, fontweight='bold')\n\nplt.tight_layout()\nplt.subplots_adjust(top=0.87, bottom=0.15, right=0.95, wspace=-0.4)\n\nplt.show()\n```\n\n### **Explanation of the Visualization**\n\n- **Left Plot: Input Space (Backward Error)**\n\n  - **$\\mathbf{b}$ (Input)**: Represents the original input data vector.\n  - **$A\\mathbf{x}_a$ (Computed)**: The result of applying the coefficient matrix $A$ to the approximate solution $\\mathbf{x_a}$.\n  - **$\\mathbf{r}$ (Residual)**: The difference between the original input $\\mathbf{b}$ and the computed $A\\mathbf{x}_a$, indicating the backward error.\n\n- **Right Plot: Solution Space (Forward Error)**\n\n  - **$\\mathbf{x}$ (True Solution)**: The actual solution to the system.\n  - **$\\mathbf{x}_a$ (Approximate)**: The computed solution.\n  - **$\\mathbf{e}$ (Forward Error)**: The difference between the true solution and the approximate solution, representing the forward error.\n\nThe arrows visually demonstrate how the backward error in the input space relates to the forward error in the solution space, encapsulating the essence of the EMF.\n\n## **Conclusion**\n\nThe **Error Magnification Factor (EMF)** is a vital concept in numerical analysis, providing insight into how errors propagate through computational processes. By quantifying the relationship between backward and forward errors, EMF helps in assessing the stability and reliability of numerical solutions. Understanding and calculating EMF enables mathematicians and engineers to design more robust algorithms and make informed decisions when interpreting computational results.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":{"source":false,"toggle":true,"caption":"See code"},"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../../styles.css"],"toc":true,"self-contained":true,"toc-depth":3,"number-sections":false,"html-math-method":"katex","embed-resources":true,"output-file":"error-magnification-factor.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","theme":{"light":"flatly","dark":"darkly"},"title":"Understanding the Error Magnification Factor (EMF)","author":"Nathan Lunceford","preview":{"port":3000,"browser":true,"watch-inputs":true,"navigate":true},"page-layout":"full","toc-location":"right","code-summary":"Show Code","code-copy":"hover"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}