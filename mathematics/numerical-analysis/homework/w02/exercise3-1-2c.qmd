---
title: 'Exercise 3.1.1c (C3-P1)'
subtitle: 'MATH411'
author: 'Nathan Lunceford'
format:
  html:
    self-contained: true
    page-layout: full
    toc: true
    toc-depth: 1
    toc-location: right
    number-sections: false
    html-math-method: katex
    embed-resources: true
    code-fold: true
    code-summary: 'Show the code'
    code-overflow: wrap
    code-copy: hover
    code-tools:
      source: false
      toggle: true
      caption: See code
engine: jupyter
preview:
  port: 3000
  browser: true
  watch-inputs: true
  navigate: true
---

```{python}
#| label: libraries
#| include: false
import numpy as np
import matplotlib.pyplot as plt
```

## **Question**

**Use [Newton's Divided Differences](../../notes/w02/newtons-divided-differences.html) to find a polynomial that passes through the points $(0, -2)$, $(2, 1)$, and $(4, 4)$.**

### **Step-by-step calculation:**

The points are:

- $(x_1, y_1) = (0, -2)$
- $(x_2, y_2) = (2, 1)$
- $(x_3, y_3) = (4, 4)$

We will first construct the **divided differences table** and use it to construct the Newton interpolating polynomial.

### **1. Divided Difference Table**

| $x$ | $f[x]$ | $f[x_1, x_2]$ | $f[x_1, x_2, x_3]$ |
| --- | ------ | ------------- | ------------------ |
| 0   | -2     |               |                    |
| 2   | 1      | 1.5           |                    |
| 4   | 4      | 1.5           | 0                  |

### **Explanation:**

1. **Zeroth order divided differences**:

   $$ f[x_1] = y_1 = -2, \quad f[x_2] = y_2 = 1, \quad f[x_3] = y_3 = 4 $$

2. **First order divided differences**:

   $$ f[x_1, x_2] = \frac{f[x_2] - f[x_1]}{x_2 - x_1} = \frac{1 - (-2)}{2 - 0} = \frac{3}{2} = 1.5 $$

   $$ f[x_2, x_3] = \frac{f[x_3] - f[x_2]}{x_3 - x_2} = \frac{4 - 1}{4 - 2} = \frac{3}{2} = 1.5 $$

3. **Second order divided difference**:

   $$ f[x_1, x_2, x_3] = \frac{f[x_2, x_3] - f[x_1, x_2]}{x_3 - x_1} = \frac{1.5 - 1.5}{4 - 0} = 0 $$

### **2. Newton Interpolating Polynomial**

The Newton polynomial is given by:

$$
P(x) = f[x_1] + f[x_1, x_2](x - x_1) + f[x_1, x_2, x_3](x - x_1)(x - x_2)
$$

Substitute the values:

$$
P(x) = -2 + 1.5(x - 0) + 0(x - 0)(x - 2)
$$

Simplify:

$$
P(x) = -2 + 1.5x
$$

So the final polynomial is:

$$
P(x) = 1.5x - 2
$$

This is the Newton interpolating polynomial for the points $(0, -2)$, $(2, 1)$, and $(4, 4)$.

```{python}
#| label: Graph
#| code-summary: Create graph with resulting polynomial

# Define the Newton interpolating polynomial
def newton_polynomial(x):
    return 1.5 * x - 2

# Create an array of x values from -1 to 5 for the graph
x_values = np.linspace(-1, 5, 400)

# Compute the corresponding y values using the polynomial function
y_values = newton_polynomial(x_values)

# Plot the polynomial curve
plt.figure(figsize=(8, 6))
plt.plot(x_values, y_values, label="P(x) = 1.5x - 2", color="blue")

# Plot the given points (0,-2), (2,1), (4,4)
data_points_x = [0, 2, 4]
data_points_y = [-2, 1, 4]
plt.scatter(data_points_x, data_points_y, color="red", label="Data Points", zorder=5)

# Add labels, title, and legend
plt.title("Newton's Divided Differences Polynomial")
plt.xlabel("x")
plt.ylabel("P(x)")

# Set x and y ticks to have increments of 1
plt.xticks(np.arange(-1, 6, 1))
plt.yticks(np.arange(-4, 5, 1))

plt.axhline(0, color='black',linewidth=0.5)
plt.axvline(0, color='black',linewidth=0.5)
plt.grid(True)
plt.legend()

# Show the plot
plt.show()

```
